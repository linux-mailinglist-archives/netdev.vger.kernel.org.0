Return-Path: <netdev-owner@vger.kernel.org>
X-Original-To: lists+netdev@lfdr.de
Delivered-To: lists+netdev@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id 0805632F032
	for <lists+netdev@lfdr.de>; Fri,  5 Mar 2021 17:40:50 +0100 (CET)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S230023AbhCEQkS (ORCPT <rfc822;lists+netdev@lfdr.de>);
        Fri, 5 Mar 2021 11:40:18 -0500
Received: from m12-13.163.com ([220.181.12.13]:55246 "EHLO m12-13.163.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S229558AbhCEQjr (ORCPT <rfc822;netdev@vger.kernel.org>);
        Fri, 5 Mar 2021 11:39:47 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=163.com;
        s=s110527; h=From:Subject:Date:Message-Id:MIME-Version; bh=84Sfy
        PNBxHgq99YUnviXVMgxuSif+wV/5LOoOlGrFtQ=; b=d2r1GH0EG/1ZtieJlsl8k
        dgGT32KnYEgdiprQHHc5E2UbtwQWmq/DJPV1GQTRmm1AOuO8oAp3dxb4P3IzwHcF
        lPcs7r1lDODuRyuHp8QHDLE/ut/x0YeOob749j/pOBPBuxKcDvrhSwSWXLNWUdzr
        STn/9KJa4Glhyp9RkIJBuM=
Received: from yangjunlin.ccdomain.com (unknown [218.17.89.92])
        by smtp9 (Coremail) with SMTP id DcCowAAnd5Ns8EFgtBCrhw--.51670S2;
        Fri, 05 Mar 2021 16:48:46 +0800 (CST)
From:   angkery <angkery@163.com>
To:     mpe@ellerman.id.au, benh@kernel.crashing.org, paulus@samba.org,
        drt@linux.ibm.com, ljp@linux.ibm.com, sukadev@linux.ibm.com,
        davem@davemloft.net, kuba@kernel.org
Cc:     linuxppc-dev@lists.ozlabs.org, netdev@vger.kernel.org,
        linux-kernel@vger.kernel.org, Junlin Yang <yangjunlin@yulong.com>
Subject: [PATCH v1] ibmvnic: remove excessive irqsave
Date:   Fri,  5 Mar 2021 16:48:39 +0800
Message-Id: <20210305084839.2405-1-angkery@163.com>
X-Mailer: git-send-email 2.24.0.windows.2
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
X-CM-TRANSID: DcCowAAnd5Ns8EFgtBCrhw--.51670S2
X-Coremail-Antispam: 1Uf129KBjvJXoW7WF13Xr4fKFy5Ar4UZF47urg_yoW8CFykpF
        4fWFy3Gw1vqw1jqa9rXw18AFs3C39YgrW8u34kCws3ur98Ar1rXFn5tFy29rWDG3ySkan8
        ZF1UZ393AFn8C3DanT9S1TB71UUUUj7qnTZGkaVYY2UrUUUUjbIjqfuFe4nvWSU5nxnvy2
        9KBjDUYxBIdaVFxhVjvjDU0xZFpf9x07b58n5UUUUU=
X-Originating-IP: [218.17.89.92]
X-CM-SenderInfo: 5dqjyvlu16il2tof0z/xtbBFA5MI1aD+lj1pQAAsS
Precedence: bulk
List-ID: <netdev.vger.kernel.org>
X-Mailing-List: netdev@vger.kernel.org

From: Junlin Yang <yangjunlin@yulong.com>

ibmvnic_remove locks multiple spinlocks while disabling interrupts:
spin_lock_irqsave(&adapter->state_lock, flags);
spin_lock_irqsave(&adapter->rwi_lock, flags);

As reported by coccinelle, the second _irqsave() overwrites the value
saved in 'flags' by the first _irqsave(),   therefore when the second
_irqrestore() comes,the value in 'flags' is not valid,the value saved
by the first _irqsave() has been lost.
This likely leads to IRQs remaining disabled. So remove the second
_irqsave():
spin_lock_irqsave(&adapter->state_lock, flags);
spin_lock(&adapter->rwi_lock);

Generated by: ./scripts/coccinelle/locks/flags.cocci
./drivers/net/ethernet/ibm/ibmvnic.c:5413:1-18:
ERROR: nested lock+irqsave that reuses flags from line 5404.

Fixes: 4a41c421f367 ("ibmvnic: serialize access to work queue on remove")
Signed-off-by: Junlin Yang <yangjunlin@yulong.com>
---
Changes in v1:
	a.According to Christophe Leroy's explanation, update the commit information.
	b.Add fixes tags.

 drivers/net/ethernet/ibm/ibmvnic.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/ibm/ibmvnic.c b/drivers/net/ethernet/ibm/ibmvnic.c
index 2464c8a..a52668d 100644
--- a/drivers/net/ethernet/ibm/ibmvnic.c
+++ b/drivers/net/ethernet/ibm/ibmvnic.c
@@ -5408,9 +5408,9 @@ static void ibmvnic_remove(struct vio_dev *dev)
 	 * after setting state, so __ibmvnic_reset() which is called
 	 * from the flush_work() below, can make progress.
 	 */
-	spin_lock_irqsave(&adapter->rwi_lock, flags);
+	spin_lock(&adapter->rwi_lock);
 	adapter->state = VNIC_REMOVING;
-	spin_unlock_irqrestore(&adapter->rwi_lock, flags);
+	spin_unlock(&adapter->rwi_lock);
 
 	spin_unlock_irqrestore(&adapter->state_lock, flags);
 
-- 
1.9.1


