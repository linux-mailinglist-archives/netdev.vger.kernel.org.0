Return-Path: <netdev-owner@vger.kernel.org>
X-Original-To: lists+netdev@lfdr.de
Delivered-To: lists+netdev@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.lfdr.de (Postfix) with ESMTP id 266EA87D05
	for <lists+netdev@lfdr.de>; Fri,  9 Aug 2019 16:44:43 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S2407146AbfHIOoc (ORCPT <rfc822;lists+netdev@lfdr.de>);
        Fri, 9 Aug 2019 10:44:32 -0400
Received: from mout.kundenserver.de ([212.227.126.133]:54831 "EHLO
        mout.kundenserver.de" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1726157AbfHIOob (ORCPT
        <rfc822;netdev@vger.kernel.org>); Fri, 9 Aug 2019 10:44:31 -0400
Received: from threadripper.lan ([149.172.19.189]) by mrelayeu.kundenserver.de
 (mreue012 [212.227.15.129]) with ESMTPA (Nemesis) id
 1MeDYt-1iUKLc3gKV-00bKl6; Fri, 09 Aug 2019 16:44:12 +0200
From:   Arnd Bergmann <arnd@arndb.de>
To:     soc@kernel.org
Cc:     Vladimir Zapolskiy <vz@mleia.com>,
        Sylvain Lemieux <slemieux.tyco@gmail.com>,
        linux-arm-kernel@lists.infradead.org, linux-kernel@vger.kernel.org,
        kbuild test robot <lkp@intel.com>,
        Arnd Bergmann <arnd@arndb.de>,
        "David S. Miller" <davem@davemloft.net>, netdev@vger.kernel.org
Subject: [PATCH v2 08/13] net: lpc-enet: fix badzero.cocci warnings
Date:   Fri,  9 Aug 2019 16:40:34 +0200
Message-Id: <20190809144043.476786-9-arnd@arndb.de>
X-Mailer: git-send-email 2.20.0
In-Reply-To: <20190809144043.476786-1-arnd@arndb.de>
References: <20190809144043.476786-1-arnd@arndb.de>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
X-Provags-ID: V03:K1:ymJswPYKYUfJcYhkgzxASapbRky55SNMKmN45E1N1FA/lD9wVRt
 nEkanG7MtJ/Pqveg+h6/6LAG+DrFlq4SuhWOfaZiZETH7gs4em9A42H4Zt4uT3VfWrhsRIe
 CulwVh+XfSAkba94KTZX+nwNfSPRHjC2+ey++8db5AJWpxOhnI+dyS0vb26UIXRYODolgss
 ynV1gvQMpkNJsma+aWNww==
X-Spam-Flag: NO
X-UI-Out-Filterresults: notjunk:1;V03:K0:DJdco6j8rD4=:dQhHBR77IFlKfKZRM8eVPy
 V4nC2W/CrV/kLoRpyM40abNGXn7N9t/aH3K6fSYmFvDJr7DP0iiwcuYczFi4+CUVeoUIdbnMI
 arj1+4IXw5yJCeQTYabD611KpdLgrW7/n+Sc3ySzEvRoON9NljdOTWLx1riZgBH8a+wiRXA+L
 Eq7ZMP3kqlqu1mdz6XZUdwfunBrF7kR81tnf374XRy0wcH9UI9pI1LPhQu4CxyQlr85VMyZbg
 MhS/+C5PMG7Lyc9niJLsIzIHqazyAa9QgashCgryO59fbkX7/lpkbilsIGUSCuQ/IzaJcH6cV
 Q0dtBElm1MOZYc7+F4ZRBk/XAnZH40dzJpa3NYDI+N4O/wKzd1jnNyobsVqrxesXszSXszE9a
 CU6nIAwn9meG1N+GkMf+kB32G+m2gqCI7O0myYNCfDswYe0kxTEI6pCxJIZHoavUtj7pPfAt/
 3ZlaoDE6Od+cEXOij5a2FrcdIj94CHIauGWDuM/3zIsqw7SBVPobAgPkN7iGhLnSCQVB1GvMU
 5wUJ8aM5BAQMSMG8/TVMdRjFtlbnsBbq1cVqM5oSyJVzfFfum40hbwvFTL4i2BqXgJBWgzk8E
 gAvKXfQuhMQL0z7O1bJJyFvZ1oZ8MoFzb8fhiwTteLjiO2a+OB0LVNxbmJTw++1xInAJgDDgO
 0G/+Jii877WgDnTQ4DecrPqaIx+F4QDoF2YK8KG7GHUHKoeZqLRr5CHs2p7m1l9QYrih/gVOv
 BKbi3SN3knrMlI+s1+mASE3vWQVTBTatnNgMew==
Sender: netdev-owner@vger.kernel.org
Precedence: bulk
List-ID: <netdev.vger.kernel.org>
X-Mailing-List: netdev@vger.kernel.org

From: kbuild test robot <lkp@intel.com>

drivers/net/ethernet/nxp/lpc_eth.c:1316:31-32: WARNING comparing pointer to 0

 Compare pointer-typed values to NULL rather than 0

Semantic patch information:
 This makes an effort to choose between !x and x == NULL.  !x is used
 if it has previously been used with the function used to initialize x.
 This relies on type information.  More type information can be obtained
 using the option -all_includes and the option -I to specify an
 include path.

Generated by: scripts/coccinelle/null/badzero.cocci

Fixes: e42016eb3844 ("net: lpc-enet: allow compile testing")
Signed-off-by: kbuild test robot <lkp@intel.com>
Signed-off-by: Arnd Bergmann <arnd@arndb.de>
---
 drivers/net/ethernet/nxp/lpc_eth.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/drivers/net/ethernet/nxp/lpc_eth.c b/drivers/net/ethernet/nxp/lpc_eth.c
index 0893b77c385d..797bdbbcef76 100644
--- a/drivers/net/ethernet/nxp/lpc_eth.c
+++ b/drivers/net/ethernet/nxp/lpc_eth.c
@@ -1312,7 +1312,7 @@ static int lpc_eth_drv_probe(struct platform_device *pdev)
 		}
 	}
 
-	if (pldat->dma_buff_base_v == 0) {
+	if (pldat->dma_buff_base_v == NULL) {
 		ret = dma_coerce_mask_and_coherent(dev, DMA_BIT_MASK(32));
 		if (ret)
 			goto err_out_free_irq;
-- 
2.20.0

