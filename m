Return-Path: <netdev-owner@vger.kernel.org>
X-Original-To: lists+netdev@lfdr.de
Delivered-To: lists+netdev@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id 77A6D1D669A
	for <lists+netdev@lfdr.de>; Sun, 17 May 2020 10:48:19 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1727029AbgEQIsN (ORCPT <rfc822;lists+netdev@lfdr.de>);
        Sun, 17 May 2020 04:48:13 -0400
Received: from eu-smtp-delivery-151.mimecast.com ([207.82.80.151]:52112 "EHLO
        eu-smtp-delivery-151.mimecast.com" rhost-flags-OK-OK-OK-OK)
        by vger.kernel.org with ESMTP id S1727038AbgEQIsN (ORCPT
        <rfc822;netdev@vger.kernel.org>); Sun, 17 May 2020 04:48:13 -0400
Received: from AcuMS.aculab.com (156.67.243.126 [156.67.243.126]) (Using
 TLS) by relay.mimecast.com with ESMTP id
 uk-mta-134-1s_UAGXuNcaiB_0okryfNQ-1; Sun, 17 May 2020 09:48:03 +0100
X-MC-Unique: 1s_UAGXuNcaiB_0okryfNQ-1
Received: from AcuMS.Aculab.com (fd9f:af1c:a25b:0:43c:695e:880f:8750) by
 AcuMS.aculab.com (fd9f:af1c:a25b:0:43c:695e:880f:8750) with Microsoft SMTP
 Server (TLS) id 15.0.1347.2; Sun, 17 May 2020 09:48:02 +0100
Received: from AcuMS.Aculab.com ([fe80::43c:695e:880f:8750]) by
 AcuMS.aculab.com ([fe80::43c:695e:880f:8750%12]) with mapi id 15.00.1347.000;
 Sun, 17 May 2020 09:48:02 +0100
From:   David Laight <David.Laight@ACULAB.COM>
To:     'Matthew Wilcox' <willy@infradead.org>
CC:     'David Howells' <dhowells@redhat.com>,
        Christoph Hellwig <hch@lst.de>,
        Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>,
        "linux-nvme@lists.infradead.org" <linux-nvme@lists.infradead.org>,
        "linux-kernel@vger.kernel.org" <linux-kernel@vger.kernel.org>,
        "linux-sctp@vger.kernel.org" <linux-sctp@vger.kernel.org>,
        "target-devel@vger.kernel.org" <target-devel@vger.kernel.org>,
        "linux-afs@lists.infradead.org" <linux-afs@lists.infradead.org>,
        "drbd-dev@lists.linbit.com" <drbd-dev@lists.linbit.com>,
        "linux-cifs@vger.kernel.org" <linux-cifs@vger.kernel.org>,
        "rds-devel@oss.oracle.com" <rds-devel@oss.oracle.com>,
        "linux-rdma@vger.kernel.org" <linux-rdma@vger.kernel.org>,
        "cluster-devel@redhat.com" <cluster-devel@redhat.com>,
        Jakub Kicinski <kuba@kernel.org>,
        "linux-block@vger.kernel.org" <linux-block@vger.kernel.org>,
        Alexey Kuznetsov <kuznet@ms2.inr.ac.ru>,
        "ceph-devel@vger.kernel.org" <ceph-devel@vger.kernel.org>,
        "linux-nfs@vger.kernel.org" <linux-nfs@vger.kernel.org>,
        Neil Horman <nhorman@tuxdriver.com>,
        Hideaki YOSHIFUJI <yoshfuji@linux-ipv6.org>,
        "netdev@vger.kernel.org" <netdev@vger.kernel.org>,
        Vlad Yasevich <vyasevich@gmail.com>,
        Eric Dumazet <edumazet@google.com>,
        Jon Maloy <jmaloy@redhat.com>,
        Ying Xue <ying.xue@windriver.com>,
        "David S. Miller" <davem@davemloft.net>,
        "ocfs2-devel@oss.oracle.com" <ocfs2-devel@oss.oracle.com>
Subject: RE: [Ocfs2-devel] [PATCH 27/33] sctp: export sctp_setsockopt_bindx
Thread-Topic: [Ocfs2-devel] [PATCH 27/33] sctp: export sctp_setsockopt_bindx
Thread-Index: AQHWKsxNyiOODFVfBEqdWGEpseVc56iq0duQ///3bQCAAS9X8A==
Date:   Sun, 17 May 2020 08:48:02 +0000
Message-ID: <49f712b3b6704c3096d3834a5985a4d6@AcuMS.aculab.com>
References: <20200514062820.GC8564@lst.de>
 <20200513062649.2100053-1-hch@lst.de> <20200513062649.2100053-28-hch@lst.de>
 <20200513180058.GB2491@localhost.localdomain>
 <129070.1589556002@warthog.procyon.org.uk>
 <05d946ae948946158dbfcbc07939b799@AcuMS.aculab.com>
 <20200516153652.GM16070@bombadil.infradead.org>
In-Reply-To: <20200516153652.GM16070@bombadil.infradead.org>
Accept-Language: en-GB, en-US
Content-Language: en-US
X-MS-Has-Attach: yes
X-MS-TNEF-Correlator: 
x-ms-exchange-transport-fromentityheader: Hosted
x-originating-ip: [10.202.205.107]
MIME-Version: 1.0
X-Mimecast-Spam-Score: 0
X-Mimecast-Originator: aculab.com
Content-Type: multipart/mixed;
        boundary="_002_49f712b3b6704c3096d3834a5985a4d6AcuMSaculabcom_"
Sender: netdev-owner@vger.kernel.org
Precedence: bulk
List-ID: <netdev.vger.kernel.org>
X-Mailing-List: netdev@vger.kernel.org

--_002_49f712b3b6704c3096d3834a5985a4d6AcuMSaculabcom_
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

From: Matthew Wilcox
> Sent: 16 May 2020 16:37
...
> > Basically:
> >
> > This patch sequence (to be written) does the following:
> >
> > Patch 1: Change __sys_setsockopt() to allocate a kernel buffer,
> >          copy the data into it then call set_fs(KERNEL_DS).
> >          An on-stack buffer (say 64 bytes) will be used for
> >          small transfers.
> >
> > Patch 2: The same for __sys_getsockopt().
> >
> > Patch 3: Compat setsockopt.
> >
> > Patch 4: Compat getsockopt.
> >
> > Patch 5: Remove the user copies from the global socket options code.
> >
> > Patches 6 to n-1; Remove the user copies from the per-protocol code.
> >
> > Patch n: Remove the set_fs(KERNEL_DS) from the entry points.
> >
> > This should be bisectable.
>=20
> I appreciate your dedication to not publishing the source code to
> your kernel module, but Christoph's patch series is actually better.
> It's typesafe rather than passing void pointers around.

There are plenty on interfaces that pass a 'pointer and length'.
Having the compiler do a type check doesn't give any security
benefit - just stops silly errors.

Oh yes, I've attached the only driver source file that calls
into the Linux kernel.
You are perfectly free to look at all the thing we have to do
to support different and broken kernel releases.

=09David

-
Registered Address Lakeside, Bramley Road, Mount Farm, Milton Keynes, MK1 1=
PT, UK
Registration No: 1397386 (Wales)

--_002_49f712b3b6704c3096d3834a5985a4d6AcuMSaculabcom_
Content-Type: text/plain; name=ss7osglue.c; charset=WINDOWS-1252
Content-Description: ss7osglue.c
Content-Disposition: attachment; filename="ss7osglue.c"; size=36047;
	creation-date="Thu, 26 Sep 2019 10:15:35 GMT";
	modification-date="Thu, 26 Sep 2019 10:15:35 GMT"
Content-Transfer-Encoding: base64

I2lkZW50ICJAKCMpIChjKSBBY3VsYWIgcGxjICRIZWFkZXI6IC9ob21lL2N2cy9yZXBvc2l0b3J5
L3NzNy9zdGFjay9zcmMvZHJpdmVyL2xpbnV4L3NzN29zZ2x1ZS5jLHYgMS4xNTcgMjAxOS0wOC0y
OSAxNjowOToxNCBkYXZpZGxhIEV4cCAkICROYW1lOiAgJCIKI2lmbmRlZiBNT0RVTEUKI2RlZmlu
ZSBNT0RVTEUKI2VuZGlmCgojaW5jbHVkZSA8bGludXgvdmVyc2lvbi5oPgoKI2lmIExJTlVYX1ZF
UlNJT05fQ09ERSA8IEtFUk5FTF9WRVJTSU9OKDIsIDYsIDI4KQojZXJyb3IgbWluaW11bSBrZXJu
ZWwgdmVyc2lvbiBpcyAyLjYuMjgKI2VuZGlmCgojaWYgTElOVVhfVkVSU0lPTl9DT0RFID49IEtF
Uk5FTF9WRVJTSU9OKDIsIDYsIDM0KQojaW5jbHVkZSA8Z2VuZXJhdGVkL2F1dG9jb25mLmg+CiNl
bHNlCiNpbmNsdWRlIDxsaW51eC9hdXRvY29uZi5oPgojZW5kaWYKCiNpbmNsdWRlIDxsaW51eC9p
bml0Lmg+CiNpbmNsdWRlIDxsaW51eC9tb2R1bGUuaD4KI2luY2x1ZGUgPGxpbnV4L3NsYWIuaD4K
I2luY2x1ZGUgPGxpbnV4L2ZzLmg+CiNpbmNsdWRlIDxsaW51eC9rbW9kLmg+CiNpbmNsdWRlIDxs
aW51eC9zdHJpbmcuaD4KI2luY2x1ZGUgPGxpbnV4L3NjaGVkLmg+CiNpZiBMSU5VWF9WRVJTSU9O
X0NPREUgPj0gS0VSTkVMX1ZFUlNJT04oNCwgMTEsIDApCiNpbmNsdWRlIDxsaW51eC9zY2hlZC9z
aWduYWwuaD4KI2VuZGlmCiNpbmNsdWRlIDxsaW51eC93YWl0Lmg+CiNpbmNsdWRlIDxsaW51eC9z
b2NrZXQuaD4KI2luY2x1ZGUgPGxpbnV4L3NpZ25hbC5oPgojaW5jbHVkZSA8bGludXgvcG9sbC5o
PgojaW5jbHVkZSA8bGludXgvbmV0Lmg+CiNpbmNsdWRlIDxsaW51eC9uc3Byb3h5Lmg+CiNpbmNs
dWRlIDxsaW51eC9pbi5oPgojaW5jbHVkZSA8bGludXgvcmVib290Lmg+CiNpbmNsdWRlIDxhc20v
YXRvbWljLmg+CiNpbmNsdWRlIDxhc20vdWFjY2Vzcy5oPgoKI2luY2x1ZGUgPGxpbnV4L2t0aHJl
YWQuaD4KCi8qIFRoaXMgaXMgb25seSBpbiB0aGUga2VybmVsIGJ1aWxkIHRyZWUgKi8KI2luY2x1
ZGUgPG5ldC9zb2NrLmg+CgojaWYgTElOVVhfVkVSU0lPTl9DT0RFID49IEtFUk5FTF9WRVJTSU9O
KDMsIDEwLCAwKQojaW5jbHVkZSA8dWFwaS9saW51eC9zY3RwLmg+CiNlbHNlCiNpbmNsdWRlIDxu
ZXQvc2N0cC91c2VyLmg+ICAgIC8qIG5ldGluZXQvc2N0cC5oIG91Z2h0IHRvIGJlIHRoaXMgZmls
ZSAqLwojZW5kaWYKCiNpZiBMSU5VWF9WRVJTSU9OX0NPREUgPCBLRVJORUxfVkVSU0lPTig0LCAx
MywgMCkKI2RlZmluZSB3YWl0X3F1ZXVlX2hlYWQgX193YWl0X3F1ZXVlX2hlYWQKI2RlZmluZSB3
YWl0X3F1ZXVlX2VudHJ5IF9fd2FpdF9xdWV1ZQojZW5kaWYKCiNkZWZpbmUgU0tfUFJPVE9DT0wo
c29jaykgKHNvY2spLT5zay0+c2tfcHJvdG9jb2wKCmV4dGVybiB2b2lkIHNzN190cmFjZV9tZW0o
aW50LCB2b2lkICosIGludCwgY29uc3QgY2hhciAqLCAuLi4pOwpleHRlcm4gdm9pZCBzczdfdHJh
Y2VfcHJpbnRmKGludCwgY29uc3QgY2hhciAqLCAuLi4pOwoKLyogQWN1bGFiIERBQ1AgaW50ZXJm
YWNlcyAtIHRoZXNlIGFyZSBpbiBhY3VsYWIncyBrZXJuX2lmLmggKi8Kdm9pZCAqZGFjcF9zeW1i
b2xfZ2V0KGNvbnN0IGNoYXIgKik7CmludCBkYWNwX3N5bWJvbF9yZWxlYXNlKGNvbnN0IGNoYXIg
Kik7CgpNT0RVTEVfQVVUSE9SKCJBY3VsYWIiKTsKTU9EVUxFX0xJQ0VOU0UoIlByb3ByaWV0YXJ5
Iik7CgojaW5jbHVkZSAic3M3b3NnbHVlLmgiCgovKiBNdXRleCBmb3IgZHJpdmVyIGludGVyZmFj
ZSBjb2RlICovCnN0YXRpYyBzdHJ1Y3QgbXV0ZXggc3M3X2dsdWVfbXV0ZXg7CgpzdGF0aWMgaW50
IHNzN2Rldl9tYWpvcjsKc3RhdGljIGNvbnN0IHZvaWQgKnNzN19kdGxzX2hhbmRsZTsKc3RhdGlj
IGludCBzczdfdXNlX2NvdW50OwpzdGF0aWMgaW50IHNzN19zdG9wX3BpZDsKCnN0YXRpYyBzdHJ1
Y3QgdGFza19zdHJ1Y3QgKmFzc2VydGVkX3Rhc2tzWzE2XTsKc3RhdGljIHVuc2lnbmVkIGludCBh
c3NlcnRlZF90YXNrX2NvdW50OwoKdHlwZWRlZiBjaGFyIHNzN192ZXJpZnlfY29uc3RbIFNTN19T
T0NLX1NUUkVBTSA9PSBTT0NLX1NUUkVBTSAmJiBTUzdfU09DS19TRVFQQUNLRVQgPT0gU09DS19T
RVFQQUNLRVQgPyAxIDogLTFdOwoKc3RhdGljIHZvaWQgc3M3X25ldF9uc191bmxvYWQodm9pZCk7
CgojZGVmaW5lIFRDUF9OT0RFTEFZIDEKCnN0YXRpYyBpbnQgc3M3X2dsdWVfb3BlbihzdHJ1Y3Qg
aW5vZGUgKiwgc3RydWN0IGZpbGUgKik7CnN0YXRpYyBpbnQgc3M3X2dsdWVfcmVsZWFzZShzdHJ1
Y3QgaW5vZGUgKiwgc3RydWN0IGZpbGUgKik7CnN0YXRpYyBsb25nIHNzN19nbHVlX3VubG9ja2Vk
X2lvY3RsKHN0cnVjdCBmaWxlICosIHVuc2lnbmVkIGludCwgdW5zaWduZWQgbG9uZyk7CnN0YXRp
YyB1bnNpZ25lZCBpbnQgc3M3X2dsdWVfcG9sbChzdHJ1Y3QgZmlsZSAqY29uc3QsIHBvbGxfdGFi
bGUgKik7CgpzdGF0aWMgc3RydWN0IGZpbGVfb3BlcmF0aW9ucyBzczdkZXZfZm9wID0KewogICAg
b3BlbjogICAgICAgICAgIHNzN19nbHVlX29wZW4sCiAgICByZWxlYXNlOiAgICAgICAgc3M3X2ds
dWVfcmVsZWFzZSwKICAgIHVubG9ja2VkX2lvY3RsOiBzczdfZ2x1ZV91bmxvY2tlZF9pb2N0bCwK
ICAgIGNvbXBhdF9pb2N0bDogICBzczdfZ2x1ZV91bmxvY2tlZF9pb2N0bCwKICAgIHBvbGw6ICAg
ICAgICAgICBzczdfZ2x1ZV9wb2xsLAogICAgb3duZXI6ICAgICAgICAgIFRISVNfTU9EVUxFCn07
CgpzdGF0aWMgaW50IHNzN19yZWJvb3Rfbm90aWZ5KHN0cnVjdCBub3RpZmllcl9ibG9jayAqbmIs
IHVuc2lnbmVkIGxvbmcgYWN0aW9uLAogICAgICAgIHZvaWQgKmRhdGEpCnsKICAgIC8qIFN5c3Rl
bSBiZWluZyByZWJvb3RlZC4KICAgICAqIEkgYWRkZWQgdGhpcyBob3BpbmcgdG8gdXNlIGl0IHRv
IGdldCB0aGUgc3M3bWFpbnQgZGFlbW9uIHRvIGV4aXQsCiAgICAgKiBidXQgaXQgaXNuJ3QgY2Fs
bGVkIHVudGlsIGFsbCB1c2VyIHByb2Nlc3NlcyBoYXZlIGRpZWQuCiAgICAgKiBMZWF2ZSBpdCBo
ZXJlIC0gbWlnaHQgYmUgdXNlZnVsIG9uZSBkYXkuICovCiAgICByZXR1cm4gMDsKfQoKc3RhdGlj
IHN0cnVjdCBub3RpZmllcl9ibG9jayBzczdfcmVib290X25vdGlmaWVyX2Jsb2NrID0gewogICAg
Lm5vdGlmaWVyX2NhbGwgPSBzczdfcmVib290X25vdGlmeSwKfTsKCnN0YXRpYyBpbnQKc3M3X2lu
aXRfZmFpbChpbnQgcnZhbCkKewogICAgaWYgKHNzN2Rldl9tYWpvciA+IDApCiAgICAgICAgdW5y
ZWdpc3Rlcl9jaHJkZXYoc3M3ZGV2X21ham9yLCAic3M3c2VydmVyIik7CiAgICByZXR1cm4gcnZh
bDsKfQoKc3RhdGljIGludApzczdfaW5pdF9tb2Qodm9pZCkKewogICAgY29uc3Qgdm9pZCAqKCpk
dGxzX3JlZ2lzdGVyKShjb25zdCBjaGFyICosIGludCAoKikoc3RydWN0IGR0bHNfZ2V0X2lmICop
KTsKICAgIGludCBydmFsOwoKICAgIHNzN19tdXRleF9pbml0KCZzczdfZ2x1ZV9tdXRleCk7Cgog
ICAgcHJpbnRrKEtFUk5fSU5GTyAiJXNcbiIsIHNzN3ZlcnNpb24pOwoKICAgIHNzN2Rldl9tYWpv
ciA9IHJlZ2lzdGVyX2NocmRldigwLCAic3M3c2VydmVyIiwgJnNzN2Rldl9mb3ApOwoKICAgIGlm
IChzczdkZXZfbWFqb3IgPCAwKSB7CiAgICAgICAgcHJpbnRrKEtFUk5fSU5GTyAic3M3c2VydmVy
OiByZWdpc3Rlcl9jaHJkZXYoKSBmYWlsZWQ6ICVkXG4iLAogICAgICAgICAgICAgICAgc3M3ZGV2
X21ham9yKTsKICAgICAgICByZXR1cm4gc3M3X2luaXRfZmFpbChzczdkZXZfbWFqb3IpOwogICAg
fQoKICAgIHJ2YWwgPSBzczdfZHJpdmVyX2luaXQoKTsKICAgIGlmIChydmFsICE9IDApIHsKICAg
ICAgICBwcmludGsoS0VSTl9JTkZPICJzczdzZXJ2ZXI6IHNzN19kcml2ZXJfaW5pdCgpIGZhaWxl
ZDogJWRcbiIsIHJ2YWwpOwogICAgICAgIHJldHVybiBzczdfaW5pdF9mYWlsKC1FSU8pOwogICAg
fQoKICAgIGR0bHNfcmVnaXN0ZXIgPSBkYWNwX3N5bWJvbF9nZXQoImFjdWNfZHRsc19yZWdpc3Rl
ciIpOwogICAgaWYgKGR0bHNfcmVnaXN0ZXIgPT0gTlVMTCkKICAgICAgICBwcmludGsoS0VSTl9J
TkZPICJzczdzZXJ2ZXI6IGNhbm5vdCBsb2NhdGUgXCJhY3VjX2R0bHNfcmVnaXN0ZXJcIlxuIik7
CiAgICBlbHNlCiAgICAgICAgc3M3X2R0bHNfaGFuZGxlID0gZHRsc19yZWdpc3RlcihEWU5BTUlD
X1RMU19QUkVGSVggInNzNyIsCiAgICAgICAgICAgICAgICBzczdfdGxzX2dldF9pZik7CgogICAg
cmVnaXN0ZXJfcmVib290X25vdGlmaWVyKCZzczdfcmVib290X25vdGlmaWVyX2Jsb2NrKTsKICAg
IHJldHVybiAwOwp9CgpzdGF0aWMgdm9pZApzczdfY2xlYW51cF9tb2Qodm9pZCkKewogICAgaW50
ICgqZHRsc191bnJlZ2lzdGVyKShjb25zdCB2b2lkICopOwoKICAgIHVucmVnaXN0ZXJfcmVib290
X25vdGlmaWVyKCZzczdfcmVib290X25vdGlmaWVyX2Jsb2NrKTsKCiAgICBpZiAoc3M3X2R0bHNf
aGFuZGxlICE9IE5VTEwpIHsKICAgICAgICBkdGxzX3VucmVnaXN0ZXIgPSBkYWNwX3N5bWJvbF9n
ZXQoImFjdWNfZHRsc191bnJlZ2lzdGVyIik7CiAgICAgICAgZGFjcF9zeW1ib2xfcmVsZWFzZSgi
YWN1Y19kdGxzX3JlZ2lzdGVyIik7CiAgICAgICAgaWYgKGR0bHNfdW5yZWdpc3RlciAhPSBOVUxM
KSB7CiAgICAgICAgICAgIGR0bHNfdW5yZWdpc3RlcihzczdfZHRsc19oYW5kbGUpOwogICAgICAg
ICAgICBkYWNwX3N5bWJvbF9yZWxlYXNlKCJhY3VjX2R0bHNfdW5yZWdpc3RlciIpOwogICAgICAg
IH0KICAgIH0KCiAgICBzczdfaW5pdF9mYWlsKDApOwoKICAgIHByaW50ayhLRVJOX0lORk8gIkFj
dWxhYiBzczdzZXJ2ZXI6IGRyaXZlciB1bmxvYWRlZFxuIik7Cn0KCm1vZHVsZV9pbml0KHNzN19p
bml0X21vZCkKbW9kdWxlX2V4aXQoc3M3X2NsZWFudXBfbW9kKQoKc3RhdGljIGludApzczdfZ2x1
ZV9vcGVuKHN0cnVjdCBpbm9kZSAqY29uc3QgaW5vZGUsIHN0cnVjdCBmaWxlICpjb25zdCBmaWxw
KQp7CiAgICBpbnQgcnZhbCwgcGlkOwoKICAgIGlmIChmaWxwLT5wcml2YXRlX2RhdGEpCiAgICAg
ICAgLyogRHVwbGljYXRlIG9wZW4gKi8KICAgICAgICByZXR1cm4gMDsKCiAgICBzczdfbXV0ZXhf
ZW50ZXIoJnNzN19nbHVlX211dGV4KTsKICAgIGlmIChzczdfdXNlX2NvdW50IDwgMCkgewogICAg
ICAgIC8qIHNzN19kcml2ZXJfc2h1dGRvd24oKSBoYXMgYmVlbiBjYWxsZWQsIHRvIGxhdGUgdG8g
ZG8gYW55dGhpbmcgKi8KICAgICAgICBzczdfbXV0ZXhfZXhpdCgmc3M3X2dsdWVfbXV0ZXgpOwog
ICAgICAgIHJldHVybiAtRUlPOwogICAgfQogICAgc3M3X3VzZV9jb3VudCsrOwogICAgc3M3X211
dGV4X2V4aXQoJnNzN19nbHVlX211dGV4KTsKCiAgICBydmFsID0gc3M3X2RldmlmX29wZW4oJmZp
bHAtPnByaXZhdGVfZGF0YSk7CiAgICBpZiAocnZhbCAhPSAwKSB7CiAgICAgICAgc3M3X211dGV4
X2VudGVyKCZzczdfZ2x1ZV9tdXRleCk7CiAgICAgICAgc3M3X3VzZV9jb3VudC0tOwogICAgICAg
IHNzN19tdXRleF9leGl0KCZzczdfZ2x1ZV9tdXRleCk7CiAgICAgICAgcGlkID0gc3M3X3BpZCgp
OwogICAgICAgIGlmIChwaWQgIT0gc3M3X3N0b3BfcGlkKQogICAgICAgICAgICBwcmludGsoS0VS
Tl9JTkZPICJzczdfZGV2aWZfb3BlbigpIHBpZCAlZCBmYWlsZWQgc3M3IGVycm9yICVkXG4iLAog
ICAgICAgICAgICAgICAgICAgIHBpZCwgcnZhbCk7CiAgICAgICAgcmV0dXJuIC1FSU87CiAgICB9
CgogICAgcmV0dXJuIDA7Cn0KCnN0YXRpYyBpbnQKc3M3X2dsdWVfcmVsZWFzZShzdHJ1Y3QgaW5v
ZGUgKmNvbnN0IGlub2RlLCBzdHJ1Y3QgZmlsZSAqY29uc3QgZmlscCkKewogICAgaWYgKGZpbHAt
PnByaXZhdGVfZGF0YSkKICAgICAgICBzczdfZGV2aWZfY2xvc2UoZmlscC0+cHJpdmF0ZV9kYXRh
KTsKCiAgICBzczdfbXV0ZXhfZW50ZXIoJnNzN19nbHVlX211dGV4KTsKICAgIHNzN191c2VfY291
bnQtLTsKCiAgICBpZiAoc3M3X3VzZV9jb3VudCA9PSAwICYmIHNzN19zdG9wX3BpZCAhPSAwKSB7
CiAgICAgICAgLyogTGFzdCB1c2VyIHByb2Nlc3MgaGFzIGdvbmUsIGNvbXBsZXRlIHNodXRkb3du
IGZ1bmN0aW9ucyAqLwogICAgICAgIHNzN19uZXRfbnNfdW5sb2FkKCk7CiAgICAgICAgLyogU3Rv
cCBhbnkgbW9yZSBvcGVucyAqLwogICAgICAgIHNzN191c2VfY291bnQgPSAtMTsKICAgICAgICBz
czdfZHJpdmVyX3NodXRkb3duKCk7CiAgICB9CgogICAgc3M3X211dGV4X2V4aXQoJnNzN19nbHVl
X211dGV4KTsKCiAgICByZXR1cm4gMDsKfQoKc3RhdGljIGxvbmcKc3M3X2dsdWVfdW5sb2NrZWRf
aW9jdGwoc3RydWN0IGZpbGUgKmZpbHAsIHVuc2lnbmVkIGludCBjbWQsIHVuc2lnbmVkIGxvbmcg
YXJnKQp7CiAgICBpZiAoIWZpbHAtPnByaXZhdGVfZGF0YSkKICAgICAgICByZXR1cm4gLUVOT0RF
VjsKCiAgICBzd2l0Y2ggKGNtZCkgewoKICAgIGNhc2UgU1M3X1NUT1A6ICAgICAgICAgIC8qIHNz
N21haW50IHNodXR0aW5nIHVzIGRvd24gKi8KICAgICAgICAvKiBTdGFydCBzaHV0ZG93biBub3cs
IHdpbGwgY29tcGxldGUgb24gbGFzdCBjbG9zZSAqLwogICAgICAgIHNzN19kcml2ZXJfc3RvcCgp
OwogICAgICAgIHNzN19zdG9wX3BpZCA9IHNzN19waWQoKTsKICAgICAgICByZXR1cm4gMDsKCiAg
ICAvKiBSZXF1ZXN0IGZyb20gc3M3bWFpbnQgb3IgdXNlciBhcHBsaWNhdGlvbiAqLwogICAgY2Fz
ZSBTUzdfVVNFUl9JT0NUTF9DT0RFOgogICAgICAgIHJldHVybiBzczdkZXZfaW9jdGwoZmlscC0+
cHJpdmF0ZV9kYXRhLCBjbWQsIGFyZyk7CgogICAgZGVmYXVsdDoKICAgICAgICByZXR1cm4gLUVO
T1RUWTsKICAgIH0KfQoKc3RhdGljIHVuc2lnbmVkIGludApzczdfZ2x1ZV9wb2xsKHN0cnVjdCBm
aWxlICpmaWxwLCBwb2xsX3RhYmxlICpwdCkKewogICAgcG9sbF93YWl0KGZpbHAsICpzczdfZGV2
aWZfZ2V0X3BvbGxxdWV1ZV9oZWFkKGZpbHAtPnByaXZhdGVfZGF0YSksIHB0KTsKICAgIHJldHVy
biBzczdfZGV2aWZfZ2V0X3BvbGxfc3RhdHVzKGZpbHAtPnByaXZhdGVfZGF0YSk7Cn0KCnZvaWQg
Kgpzczdfb3NfbWFsbG9jKGludCBzLCBpbnQgc3M3X2ZsYWdzKQp7CiAgICByZXR1cm4ga21hbGxv
YyhzLCBHRlBfS0VSTkVMKTsKfQoKdm9pZApzczdfb3NfZnJlZSh2b2lkICpwKQp7CiAgICBrZnJl
ZShwKTsKfQoKdm9pZApzczdfcG9sbF9xdWV1ZV9oZWFkX2RlaW5pdCh3YWl0X3F1ZXVlX2hlYWRf
dCAqKnBxaHApCnsKICAgIHNzN19vc19mcmVlKCpwcWhwKTsKfQoKaW50CnNzN19wb2xsX3F1ZXVl
X2hlYWRfaW5pdCh3YWl0X3F1ZXVlX2hlYWRfdCAqKnBxaHApCnsKICAgIHdhaXRfcXVldWVfaGVh
ZF90ICpwcWggPSBzczdfb3NfbWFsbG9jKHNpemVvZiAqcHFoLCAwKTsKICAgIGlmIChwcWggPT0g
TlVMTCkKICAgICAgICByZXR1cm4gLTE7CiAgICBpbml0X3dhaXRxdWV1ZV9oZWFkKHBxaCk7CiAg
ICAqcHFocCA9IHBxaDsKICAgIHJldHVybiAwOwp9Cgp2b2lkCnNzN19wb2xsd2FrZXVwKHdhaXRf
cXVldWVfaGVhZF90ICoqcHFoLCB1bnNpZ25lZCBpbnQgcG9sbF9ldmVudCkKewogICAgd2FrZV91
cCgqcHFoKTsKfQoKdm9pZApzczdfa2lsbF90YXNrKHN0cnVjdCB0YXNrX3N0cnVjdCAqdGFzaywg
aW50IHNpZ25vKQp7CiAgICAvKiBTZW5kIHNpZ25hbCBldmVuIHRob3VnaCBzZXQgdG8gU0lHX0lH
TiAqLwogICAgZm9yY2Vfc2lnKHNpZ25vLCB0YXNrKTsKfQoKCiNpZiBMSU5VWF9WRVJTSU9OX0NP
REUgPD0gS0VSTkVMX1ZFUlNJT04oMiwgNiwgMzIpCi8qIHNwaW5sb2NrX3QgaXMgYSB0eXBlZGVm
IGZvciBhbiB1bm5hbWVkIHN0cnVjdHVyZSBzbyB3ZSBjYW4ndAogKiBtYWtlICdzdHJ1Y3Qgc3Bp
bmxvY2snIG1hdGNoIHRoZSBrZXJuZWwgc3BpbmxvY2sgdHlwZS4gKi8KI2RlZmluZSBTUElOTE9D
S19DQVNUIChzcGlubG9ja190ICopCiNlbHNlCiNkZWZpbmUgU1BJTkxPQ0tfQ0FTVAojZW5kaWYK
CnNpemVfdApzczdfc3Bpbl9sb2NrX3NpemUodm9pZCkKewogICAgcmV0dXJuIHNpemVvZiAqU1BJ
TkxPQ0tfQ0FTVChzdHJ1Y3Qgc3BpbmxvY2sgKikwOwp9Cgp2b2lkCnNzN19zcGluX2xvY2tfaW5p
dChzdHJ1Y3Qgc3BpbmxvY2sgKnMpCnsKICAgIHNwaW5fbG9ja19pbml0KFNQSU5MT0NLX0NBU1Qg
cyk7Cn0KCnZvaWQKc3M3X3NwaW5fbG9ja19lbnRlcihzdHJ1Y3Qgc3BpbmxvY2sgKnMpCnsKICAg
IHNwaW5fbG9jayhTUElOTE9DS19DQVNUIHMpOwp9Cgp2b2lkCnNzN19zcGluX2xvY2tfZXhpdChz
dHJ1Y3Qgc3BpbmxvY2sgKnMpCnsKICAgIHNwaW5fdW5sb2NrKFNQSU5MT0NLX0NBU1Qgcyk7Cn0K
CnNpemVfdApzczdfbXV0ZXhfc2l6ZSh2b2lkKQp7CiAgICByZXR1cm4gc2l6ZW9mKHN0cnVjdCBt
dXRleCk7Cn0KCnZvaWQKc3M3X211dGV4X2luaXQoc3RydWN0IG11dGV4ICpzKQp7CiAgICBtdXRl
eF9pbml0KHMpOwp9Cgp2b2lkCnNzN19tdXRleF9lbnRlcihzdHJ1Y3QgbXV0ZXggKnMpCnsKICAg
IG11dGV4X2xvY2socyk7Cn0KCmludApzczdfbXV0ZXhfZW50ZXJfdG1vKHN0cnVjdCBtdXRleCAq
cywgaW50IG1heF93YWl0KQp7CiAgICAvKiBUaGVyZSBpcyBubyBtdXRleF9lbnRlcl90aW1lb3V0
KCkgaG93ZXZlciB0aGlzIHdhcyBhbGwgYWRkZWQKICAgICAqIHRvIHN0b3Agc3RhdHVzIGNvbW1h
bmRzIHNsZWVwaW5nIGZvcmV2ZXIgd2hlbiBhIHByb2Nlc3MgaGFzCiAgICAgKiAnb29wc2VkJyB3
aXRoIGEgbXV0ZXggaGVsZC4KICAgICAqIERvIGEgc25lYWsgY2hlY2sgb24gdGhlIHN0YXRlIG9m
IGFueSBvd25pbmcgdGFzayB0aGVuCiAgICAgKiB3YWl0IGludGVycnVwdGlibHkuCiAgICAgKiBe
QyBzaG91bGQgZXJyb3Igb3V0IHRoZSBzdGF0dXMgY2FsbC4gKi8KCiAgICAvKiBJZiB1bmNvbnRl
bmRlZCBqdXN0IGFjcXVpcmUgKi8KICAgIGlmIChtdXRleF90cnlsb2NrKHMpKQogICAgICAgIHJl
dHVybiAxOwoKI2lmIExJTlVYX1ZFUlNJT05fQ09ERSA+PSBLRVJORUxfVkVSU0lPTig0LCAxMCwg
MCkKICAgIHsKICAgICAgICBzdHJ1Y3QgdGFza19zdHJ1Y3QgKm93bmVyOwogICAgICAgIGludCBz
dGF0ZTsKCiAgICAgICAgc3Bpbl9sb2NrKCZzLT53YWl0X2xvY2spOwogICAgICAgIG93bmVyID0g
X19tdXRleF9vd25lcihzKTsKICAgICAgICBzdGF0ZSA9IG93bmVyID8gb3duZXItPnN0YXRlIDog
MDsKICAgICAgICBzcGluX3VubG9jaygmcy0+d2FpdF9sb2NrKTsKICAgICAgICBpZiAoc3RhdGUg
JiBUQVNLX0RFQUQpCiAgICAgICAgICAgIC8qIG11dGV4IHdpbGwgbmV2ZXIgYmUgcmVsZWFzZWQs
IHRyZWF0IGFzIHRpbWVvdXQgKi8KICAgICAgICAgICAgcmV0dXJuIDA7CiAgICB9CiNlbmRpZgoK
ICAgIC8qIElmIEM3X0FTU0VSVCgpIGhhcyBiZWVuIGNhbGxlZCwganVzdCBsZXQgZXZlcnlvbmUg
aW4gKi8KICAgIGlmIChhc3NlcnRlZF90YXNrX2NvdW50KQogICAgICAgIHJldHVybiAwOwoKICAg
IHJldHVybiBtdXRleF9sb2NrX2ludGVycnVwdGlibGUocykgPyAtMSAvKiBFSU5UUiAqLyA6IDEg
LyogYWNxdWlyZWQgKi87Cn0KCnZvaWQKc3M3X211dGV4X2V4aXQoc3RydWN0IG11dGV4ICpzKQp7
CiAgICBtdXRleF91bmxvY2socyk7Cn0KCnNpemVfdApzczdfY3Zfc2l6ZSh2b2lkKQp7CiAgICBy
ZXR1cm4gc2l6ZW9mKHdhaXRfcXVldWVfaGVhZF90KTsKfQoKdm9pZApzczdfY3ZfaW5pdCh3YWl0
X3F1ZXVlX2hlYWRfdCAqY29uc3QgdikKewogICAgaW5pdF93YWl0cXVldWVfaGVhZCh2KTsKfQoK
c3RhdGljIGludApzczdfc2NoZWR1bGVfdG1vKGludCB0bW9fbXMpCnsKICAgIGludCB0bW9famlm
ZmllczsKCiAgICAvKiBSZWFsbHkgc2xlZXAgLSB1bmxlc3Mgd29rZW4gc2luY2UgdW5sb2NraW5n
IHNwaW5sb2NrICovCiAgICBpZiAodG1vX21zID49IDApIHsKICAgICAgICBpZiAodG1vX21zIDw9
IDEpCiAgICAgICAgICAgIHRtb19qaWZmaWVzID0gdG1vX21zOwogICAgICAgIGVsc2UKICAgICAg
ICAgICAgLyogQ29udmVydCB0byBqaWZmaWVzIGFuZCByb3VuZCB1cCAqLwogICAgICAgICAgICB0
bW9famlmZmllcyA9IDEgKyAodG1vX21zICsgMSAtIDEpICogMTYgLyAoMTYwMDAvSFopOwogICAg
ICAgIC8qIFJldHVybiB2YWx1ZSBvZiBzY2hlZHVsZV90aW1lb3V0KCkgaXMgdW5leHBpcmVkIHRp
bWVvdXQgKi8KICAgICAgICAvKiBXZSB3YW50IDAgZm9yICd0aW1lZG91dCcgKHRvIG1hdGNoIGN2
X3dhaXRfc2lnKCkpICovCiAgICAgICAgcmV0dXJuIHNjaGVkdWxlX3RpbWVvdXQodG1vX2ppZmZp
ZXMpICE9IDA7CiAgICB9CgogICAgc2NoZWR1bGUoKTsKICAgIGlmICghc2lnbmFsX3BlbmRpbmco
Y3VycmVudCkpCiAgICAgICAgLyogV29rZW4gYnkgdGhlIGV2ZW50ICovCiAgICAgICAgcmV0dXJu
IDE7CgogICAgLyogUmVwb3J0IDAgZm9yIGEgc2lnbmFsLCBleGNlcHQgLTEgZm9yIFNJR0tJTEwg
KHJlYm9vdCkgKi8KICAgIHJldHVybiBzaWdpc21lbWJlcigmY3VycmVudC0+cGVuZGluZy5zaWdu
YWwsIFNJR0tJTEwpID8gLTEgOiAwOwp9CgppbnQKc3M3X2N2X3dhaXRfZ3V0cyh3YWl0X3F1ZXVl
X2hlYWRfdCAqY3ZwLCBzdHJ1Y3QgbXV0ZXggKm10eHAsCiAgICAgICAgaW50IGludGVycnVwdGli
bGUsIGludCB0bW9fbXMpCnsKICAgIGludCByOwogICAgc3RydWN0IHdhaXRfcXVldWVfZW50cnkg
dzsKICAgIGludCBzbGVlcF9zdGF0ZTsKCiAgICBpbml0X3dhaXRxdWV1ZV9lbnRyeSgmdywgY3Vy
cmVudCk7CgogICAgLyogVGVsbCBzY2hlZHVsZXIgd2UgYXJlIGdvaW5nIHRvIHNsZWVwLi4uICov
CiAgICBpZiAoc2lnbmFsX3BlbmRpbmcoY3VycmVudCkgJiYgIWludGVycnVwdGlibGUpCiAgICAg
ICAgLyogV2UgZG9uJ3Qgd2FudCB3YWtpbmcgaW1tZWRpYXRlbHkgKGFnYWluKSAqLwogICAgICAg
IHNsZWVwX3N0YXRlID0gVEFTS19VTklOVEVSUlVQVElCTEU7CiAgICBlbHNlCiAgICAgICAgc2xl
ZXBfc3RhdGUgPSBUQVNLX0lOVEVSUlVQVElCTEU7CiAgICBzZXRfY3VycmVudF9zdGF0ZShzbGVl
cF9zdGF0ZSk7CgogICAgLyogQ29ubmVjdCB0byBjb25kaXRpb24gdmFyaWFibGUgLi4uICovCiAg
ICBhZGRfd2FpdF9xdWV1ZShjdnAsICZ3KTsKICAgIG11dGV4X3VubG9jayhtdHhwKTsgLyogUmVs
ZWFzZSBtdXRleCAqLwoKICAgIHIgPSBzczdfc2NoZWR1bGVfdG1vKHRtb19tcyk7CgogICAgLyog
RGlzY29ubmVjdCBmcm9tIGNvbmRpdGlvbiB2YXJpYWJsZSAuLi4gKi8KICAgIHJlbW92ZV93YWl0
X3F1ZXVlKGN2cCwgJncpOwoKICAgIC8qIFJlLWFjcXVpcmUgbXV0ZXggKi8KICAgIG11dGV4X2xv
Y2sobXR4cCk7CgogICAgLyogcmV0dXJuIDEgaWYgd29rZW4sIDAgaWYgdGltZWRfb3V0L3NpZ25h
bCwgLTEgaWYgU0lHS0lMTCAqLwogICAgcmV0dXJuIHI7Cn0KCmludApzczdfY3Zfd2FpdF9zcGlu
X2xvY2sod2FpdF9xdWV1ZV9oZWFkX3QgKmN2cCwgc3RydWN0IHNwaW5sb2NrICpsb2NrLAogICAg
ICAgIGludCBpbnRlcnJ1cHRpYmxlLCBpbnQgdG1vX21zKQp7CiAgICBpbnQgcjsKICAgIHN0cnVj
dCB3YWl0X3F1ZXVlX2VudHJ5IHc7CiAgICBpbnQgc2xlZXBfc3RhdGU7CgogICAgaW5pdF93YWl0
cXVldWVfZW50cnkoJncsIGN1cnJlbnQpOwoKICAgIC8qIFRlbGwgc2NoZWR1bGVyIHdlIGFyZSBn
b2luZyB0byBzbGVlcC4uLiAqLwogICAgaWYgKHNpZ25hbF9wZW5kaW5nKGN1cnJlbnQpICYmICFp
bnRlcnJ1cHRpYmxlKQogICAgICAgIC8qIFdlIGRvbid0IHdhbnQgd2FraW5nIGltbWVkaWF0ZWx5
IChhZ2FpbikgKi8KICAgICAgICBzbGVlcF9zdGF0ZSA9IFRBU0tfVU5JTlRFUlJVUFRJQkxFOwog
ICAgZWxzZQogICAgICAgIHNsZWVwX3N0YXRlID0gVEFTS19JTlRFUlJVUFRJQkxFOwogICAgc2V0
X2N1cnJlbnRfc3RhdGUoc2xlZXBfc3RhdGUpOwoKICAgIC8qIENvbm5lY3QgdG8gY29uZGl0aW9u
IHZhcmlhYmxlIC4uLiAqLwogICAgYWRkX3dhaXRfcXVldWUoY3ZwLCAmdyk7CiAgICBzcGluX3Vu
bG9jayhTUElOTE9DS19DQVNUIGxvY2spOwoKICAgIHIgPSBzczdfc2NoZWR1bGVfdG1vKHRtb19t
cyk7CgogICAgLyogRGlzY29ubmVjdCBmcm9tIGNvbmRpdGlvbiB2YXJpYWJsZSAuLi4gKi8KICAg
IHJlbW92ZV93YWl0X3F1ZXVlKGN2cCwgJncpOwoKICAgIC8qIFJlLWFjcXVpcmUgbXV0ZXggKi8K
ICAgIHNwaW5fbG9jayhTUElOTE9DS19DQVNUIGxvY2spOwoKICAgIHJldHVybiByOwp9CgovKi0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLSoqCioqIHNzN19jdl9icm9hZGNhc3QgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgKioKKiogQXdha2VuIGFsbCB0aHJlYWRzIHRoYXQg
YXJlIHNsZWVwaW5nIG9uIGEgY29uZGl0aW9uIHZhcmlhYmxlLiAgICAgICAqKgoqKiBDYWxsZXIg
bXVzdCB1c2UgdGhlIGFzc29jaWF0ZWQgbXV0ZXggc2Vuc2libHksIGkuZS4gLi4uICAgICAgICAg
ICAgICoqCioqICAgICAgYWNxdWlyZSB0aGUgbXV0ZXggICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgKioKKiogICAgICBTZXQgc29tZSBmbGFnIHRoYXQgYSBzbGVl
cGluZyB0aHJlYWQgd2lsbCBjaGVjayBmb3IgICAgICAgICAgICAqKgoqKiAgICAgIHNzN19jdl9i
cm9hZGNhc3QoKSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICoq
CioqICAgICAgcmVsZWFzZSB0aGUgbXV0ZXggICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgKioKKiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qLwoKdm9pZApzczdfY3ZfYnJvYWRjYXN0
KHdhaXRfcXVldWVfaGVhZF90ICpjb25zdCBjdnApCnsKICAgIHdha2VfdXAoY3ZwKTsKfQoKCnVu
c2lnbmVkIGxvbmcKc3M3X2NvcHlfdG9fdXNlcih2b2lkICp0bywgY29uc3Qgdm9pZCAqZnJvbSwg
dW5zaWduZWQgbG9uZyBjKQp7CiAgICByZXR1cm4gY29weV90b191c2VyKHRvLCBmcm9tLCBjKTsK
fQoKdW5zaWduZWQgbG9uZwpzczdfY29weV9mcm9tX3VzZXIodm9pZCAqdG8sIGNvbnN0IHZvaWQg
KmZyb20sIHVuc2lnbmVkIGxvbmcgYykKewogICAgcmV0dXJuIGNvcHlfZnJvbV91c2VyKHRvLCBm
cm9tLCBjKTsKfQoKdW5zaWduZWQgaW50CnNzN19waWQodm9pZCkKewogICAgcmV0dXJuIGN1cnJl
bnQtPnBpZDsKfQoKc3RydWN0IHRhc2tfc3RydWN0ICoKc3M3X2N1cnJlbnRfdGFzayh2b2lkKQp7
CiAgICByZXR1cm4gY3VycmVudDsKfQoKdW5zaWduZWQgaW50CnNzN190YXNrX3BpZChzdHJ1Y3Qg
dGFza19zdHJ1Y3QgKnRhc2spCnsKICAgIHJldHVybiB0YXNrLT5waWQ7Cn0KCmludApzczdfZ2x1
ZV90aHJlYWRfZm4odm9pZCAqc3M3X3RocmVhZCkKewogICAgc3M3X3RocmVhZF9ydW4oc3M3X3Ro
cmVhZCk7CiAgICBtb2R1bGVfcHV0X2FuZF9leGl0KDApOwogICAgcmV0dXJuIDA7Cn0KCnN0cnVj
dCB0YXNrX3N0cnVjdCAqCnNzN19vc190aHJlYWRfY3JlYXRlKHN0cnVjdCBzczdfdGhyZWFkICp0
aHJwLCBjb25zdCBjaGFyICpkZXNjKQp7CiAgICBzdHJ1Y3QgdGFza19zdHJ1Y3QgKnRhc2s7CiAg
ICBjb25zdCBjaGFyICpzcDsKICAgIGludCBsZW47CgogICAgaWYgKCF0cnlfbW9kdWxlX2dldChU
SElTX01PRFVMRSkpCiAgICAgICAgcmV0dXJuIE5VTEw7CgogICAgLyogVGhlIHRocmVhZCBkZXNj
cmlwdGlvbiBnZXRzIHRydW5jYXRlZCB0byAxNSBjaGFycywgY2FuJ3QgYmUgaGVscGVkIQogICAg
ICogVXNlICdzczdtYWludCBvc3N0YXR1cyAtdCcgdG8gZ2V0IHRoZSBmdWxsIGRlc2NyaXB0aW9u
LiAqLwoKICAgIC8qIFJlbW92ZSBhbnkgbGVhZGluZyBzcGFjZSBhbmQgdHJ1bmNhdGUgYWZ0ZXIg
c2Vjb25kIHdvcmQgKi8KICAgIGlmIChkZXNjWzBdID09ICcgJykKICAgICAgICBkZXNjKys7CiAg
ICBsZW4gPSAxMDA7CiAgICBzcCA9IHNzN3N0cmNocihkZXNjLCAnICcpOwogICAgaWYgKHNwICE9
IE5VTEwpIHsKICAgICAgICBzcCA9IHNzN3N0cmNocihzcCArIDEsICcgJyk7CiAgICAgICAgaWYg
KHNwICE9IE5VTEwpCiAgICAgICAgICAgIGxlbiA9IHNwIC0gZGVzYzsKICAgIH0KCiAgICB0YXNr
ID0ga3RocmVhZF9ydW4oc3M3X2dsdWVfdGhyZWFkX2ZuLCB0aHJwLCAic3M3OiUuKnMiLCBsZW4s
IGRlc2MpOwogICAgaWYgKElTX0VSUih0YXNrKSkgewogICAgICAgIG1vZHVsZV9wdXQoVEhJU19N
T0RVTEUpOwogICAgICAgIHJldHVybiBOVUxMOwogICAgfQogICAgcmV0dXJuIHRhc2s7Cn0KCnZv
aWQKc3M3X21zX2RlbGF5KGNvbnN0IHVuc2lnbmVkIGludCBtcykKewogICAgc2V0X2N1cnJlbnRf
c3RhdGUoVEFTS19VTklOVEVSUlVQVElCTEUpOwogICAgc2NoZWR1bGVfdGltZW91dCgodW5zaWdu
ZWQgbG9uZyBsb25nKUhaICogbXMgLyAxMDAwKTsKfQoKaW50CnNzN19vc19nZXRfdGlja3Modm9p
ZCkKewogICAgcmV0dXJuIGppZmZpZXM7Cn0KCmludApzczdfb3NfdGlja3NfdG9fdXMoaW50IGlu
dGVydmFsKQp7CiAgICByZXR1cm4gaW50ZXJ2YWwgKiAxMDAwMDAwIC8gSFo7Cn0KCmludApzczdf
b3NfdGlja3NfdG9fbXMoaW50IGludGVydmFsKQp7CiAgICByZXR1cm4gaW50ZXJ2YWwgKiAxMDAw
IC8gSFo7Cn0KCmludApzczdfb3NfdGlja3NfdG9fc2VjcyhpbnQgaW50ZXJ2YWwpCnsKICAgIHJl
dHVybiBpbnRlcnZhbCAvIEhaOwp9Cgp1bnNpZ25lZCBpbnQKc3M3X2dldF9tc190aW1lKHZvaWQp
CnsKICAgIHN0YXRpYyB1bnNpZ25lZCBsb25nIGVwb2NoOwogICAgc3RydWN0IHRpbWVzcGVjIG5v
dzsKCiAgICBnZXRyYXdtb25vdG9uaWMoJm5vdyk7CgogICAgaWYgKGVwb2NoID09IDApCiAgICAg
ICBlcG9jaCA9IG5vdy50dl9zZWM7CgogICAgcmV0dXJuIChub3cudHZfc2VjIC0gZXBvY2gpICog
MTAwMCArIG5vdy50dl9uc2VjIC8gMTAwMDAwMDsKfQoKc3RydWN0IGFjdV9zczdtYWludF90aW1l
IHsKICAgdW5zaWduZWQgaW50IHN0X3NlYzsKICAgdW5zaWduZWQgaW50IHN0X3VzZWM7Cn07Cgoj
aWYgTElOVVhfVkVSU0lPTl9DT0RFID49IEtFUk5FTF9WRVJTSU9OKDUsIDAsIDApCnN0YXRpYyBp
bmxpbmUgdm9pZCBkb19nZXR0aW1lb2ZkYXkoc3RydWN0IHRpbWV2YWwgKnR2KQp7CiAgICAgICAg
c3RydWN0IHRpbWVzcGVjNjQgdHM7CgogICAgICAgIGt0aW1lX2dldF9yZWFsX3RzNjQoJnRzKTsK
ICAgICAgICB0di0+dHZfc2VjID0gdHMudHZfc2VjOwogICAgICAgIHR2LT50dl91c2VjID0gdHMu
dHZfbnNlYy8xMDAwdTsKfQojZW5kaWYKCnZvaWQKc3M3X2dldF90aW1lc3RhbXAoc3RydWN0IGFj
dV9zczdtYWludF90aW1lICpwdGltZSkKewogICAgc3RydWN0IHRpbWV2YWwgdHY7CgogICAgLyog
ZG9fZ2V0dGltZW9mZGF5KCkgcmV0dXJucyAnd2FsbCBjbG9jayB0aW1lJy4KICAgICAqIEl0IGNh
biBnbyBiYWNrd2FyZHMuICAqLwogICAgZG9fZ2V0dGltZW9mZGF5KCZ0dik7CiAgICBwdGltZS0+
c3Rfc2VjID0gdHYudHZfc2VjOwogICAgcHRpbWUtPnN0X3VzZWMgPSB0di50dl91c2VjOwp9Cgp1
bnNpZ25lZCBpbnQKc3M3X2dldF9lbGFwc2VkKGNvbnN0IHN0cnVjdCBhY3Vfc3M3bWFpbnRfdGlt
ZSAqZXBvY2gpCnsKICAgIHN0cnVjdCB0aW1ldmFsIHR2OwogICAgZG9fZ2V0dGltZW9mZGF5KCZ0
dik7CgogICAgcmV0dXJuIHR2LnR2X3NlYyAtIGVwb2NoLT5zdF9zZWM7Cn0KCnZvaWQKc3M3X29z
X2xvZ19lcnJvcihjb25zdCBjaGFyICp0ZXh0KQp7CiAgICBwcmludGsoS0VSTl9FTUVSRyAic3M3
c2VydmVyOiAlcyIsIHRleHQpOwogICAgaWYgKG1lbWNtcCh0ZXh0LCAiQXNzZXJ0aW9uIGZhaWwi
LCAxNCkgPT0gMCkgewogICAgICAgIGR1bXBfc3RhY2soKTsKICAgICAgICAvKiBBbHRob3VnaCB3
ZSByZXR1cm4sIHRoZSBjYWxsZXIgc2xlZXBzIGZvcmV2ZXIgKi8KICAgICAgICAvKiBSZW1lbWJl
ciB0aGUgJ3N0dWNrJyB0YXNrcyAqLwogICAgICAgIGFzc2VydGVkX3Rhc2tzW2Fzc2VydGVkX3Rh
c2tfY291bnQrKyAmIDE1XSA9IGN1cnJlbnQ7CiAgICB9Cn0KCi8qLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKioKKiog
TWlzY2VsbGFub3VzIHN0cmluZyBhbmQgbWVtb3J5IGZ1bmN0aW9ucyAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAqKgoqKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovCgp2b2lkCnNzN21lbXplcm8odm9pZCAqYnVm
LCBzaXplX3QgbGVuKQp7CiAgICBtZW1zZXQoYnVmLCAwLCBsZW4pOwp9Cgp2b2lkCnNzN21lbWNw
eSh2b2lkICpkZXN0LCBjb25zdCB2b2lkICpzcmMsIHNpemVfdCBsZW4pCnsKICAgIG1lbWNweShk
ZXN0LCBzcmMsIGxlbik7Cn0KCnZvaWQKc3M3X21lbW1vdmUodm9pZCAqZGVzdCwgY29uc3Qgdm9p
ZCAqc3JjLCBzaXplX3QgbGVuKQp7CiAgICBtZW1tb3ZlKGRlc3QsIHNyYywgbGVuKTsKfQoKaW50
CnNzN21lbWNtcChjb25zdCB2b2lkICpzMSwgY29uc3Qgdm9pZCAqczIsIHNpemVfdCBsZW4pCnsK
ICAgIHJldHVybiBtZW1jbXAoczEsIHMyLCBsZW4pOwp9Cgp1bnNpZ25lZCBpbnQKc3M3c3RybGVu
KGNvbnN0IGNoYXIgKnN0cikKewogICAgcmV0dXJuIHN0cmxlbihzdHIpOwp9Cgp2b2lkCnNzN3N0
cmNweShjaGFyICpkZXN0LCBjb25zdCBjaGFyICpzcmMpCnsKICAgIHN0cmNweShkZXN0LCBzcmMp
Owp9CgppbnQKc3M3c3RyY21wKGNvbnN0IGNoYXIgKmRlc3QsIGNvbnN0IGNoYXIgKnNyYykKewog
ICAgcmV0dXJuIHN0cmNtcChkZXN0LCBzcmMpOwp9CgpjaGFyICoKc3M3c3RybmNweShjaGFyICpj
b25zdCBzMSwgY29uc3QgY2hhciAqczIsIHNpemVfdCBuKQp7CiAgICByZXR1cm4gc3RybmNweShz
MSwgczIsIG4pOwp9CgpjaGFyICoKc3M3c3RyY2hyKGNvbnN0IGNoYXIgKnMsIGNvbnN0IGludCBj
KQp7CiAgICByZXR1cm4gc3RyY2hyKHMsIGMpOwp9CgovKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSoqCioqIFRDUC9J
UCBmdW5jdGlvbnMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgKioKKiotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qLwoKaW50CnNzN19zY3RwX3N1cHBvcnRlZCh2b2lkKQp7
CiAgICByZXR1cm4gMTsKfQoKdW5zaWduZWQgaW50CnNzN19nZXRfZGVmYXVsdF9hZl9vcHRzKHVu
c2lnbmVkIGludCBwcm90b2NvbCwgdW5zaWduZWQgaW50IHBvcnQpCnsKICAgIC8qIFRoZSBTUzcg
ZHJpdmVyIG5lZWRzIHRvIGtub3cgdGhlIHdoaWNoIGFkZHJlc3MgZmFtaWxpZXMgKElQdjQgb3Ig
SVB2NikKICAgICAqIHRvIHVzZSBmb3IgbGlzdGVuaW5nIHNvY2tldHMuCiAgICAgKgogICAgICog
V2hldGhlciBhbiBJUFY2IHNvY2tldCBjYW4gYWNjZXB0IElQVjQgY29ubmVjdGlvbnMgZGVwZW5k
cyBvbgogICAgICogdGhlIElQVjZfVjZPTkxZIHNvY2tldCBvcHRpb24uIFRoZSBkZWZhdWx0IGZv
ciB3aGljaCBkZXBlbmRzCiAgICAgKiBvbiBuZXQuaXB2Ni5iaW5kdjZvbmx5ICh3aGljaCB1c3Vh
bGx5IGRlZmF1bHRzIHRvIDAgLSBhbGxvd2luZyBJUFY0KS4KICAgICAqIFRoZXJlIGFsc28gbWln
aHQgYmUga2VybmVscyB3aGVyZSBjbGVhcmluZyBJUFY2X1Y2T05MWSBpcyBkaXNhbGxvd2VkLgog
ICAgICoKICAgICAqIE5vcm1hbGx5IG9ubHkgYSBzaW5nbGUgc29ja2V0IGlzIGNyZWF0ZWQgZm9y
IGVhY2ggcG9ydCBzaW5jZSBhbiBJUHY2CiAgICAgKiBzb2NrZXQgY2FuIHJlY2VpdmUgSVB2NCBj
b25uZWN0aW9ucy4gSG93ZXZlciBhIHNlcGFyYXRlIElQdjQgc29ja2V0CiAgICAgKiBjYW4gYmUg
cmVxdWVzdGVkLgogICAgICoKICAgICAqIFRoaXMgZnVuY3Rpb24gc2hvdWxkIHJldHVybiBvbmUg
b2Y6CiAgICAgKiAgICBTUzdfQUZfT1BUX0lQdjYKICAgICAqICAgICAgICBJUFY2IHNvY2tldCB3
aXRoIHRoZSBkZWZhdWx0IElQVjZfVjZPTkxZIHZhbHVlLgogICAgICogICAgU1M3X0FGX09QVF9J
UHY2X1Y2T05MWV9DTFIKICAgICAqICAgICAgICBJUFY2IHNvY2tldCB3aXRoIElQVjZfVjZPTkxZ
IGV4cGxpY2l0bHkgY2xlYXJlZC4KICAgICAqICAgIFNTN19BRl9PUFRfSVB2Nl9WNk9OTFlfU0VU
CiAgICAgKiAgICAgICAgSVBWNiBzb2NrZXQgd2l0aCBJUFY2X1Y2T05MWSBleHBsaWNpdGx5IHNl
dC4KICAgICAqIFBvc3NpYmx5IGxvZ2ljYWxseSBvcmVkIHdpdGg6CiAgICAgKiAgICBTUzdfQUZf
T1BUX0lQdjQKICAgICAqICAgICAgICBBIHNlcGFyYXRlIElQdjQgc29ja2V0LgogICAgICoKICAg
ICAqIEZvciBmbGV4aWJpbGl0eSB0aGUgZGVjaXNpb24gY2FuIGJlIGJhc2VkIG9uIHRoZSBwcm90
b2NvbCAoZWl0aGVyCiAgICAgKiBJUFBST1RPX1NDVFAgb3IgSVBQUk9UT19UQ1ApIG9yIHRoZSBw
b3J0IG51bWJlci4KICAgICAqCiAgICAgKiBEZWZhdWx0IHRvIGNyZWF0aW5nIGEgc2luZ2xlIHNv
Y2tldCBhbmQgZGlzYWJsaW5nIElQVjZfVjZPTkxZLgogICAgICovCiNpZm5kZWYgU1M3X0RFRkFV
TFRfQUZfT1BUUwojZGVmaW5lIFNTN19ERUZBVUxUX0FGX09QVFMgU1M3X0FGX09QVF9JUHY2CiNl
bmRpZgogICAgIHJldHVybiBTUzdfREVGQVVMVF9BRl9PUFRTOwp9CgovKiBrZXJuZWxfZ2V0L3Nl
dF9zb2Nrb3B0KCkgcHJvdG90eXBlcyBoYXZlIChjaGFyICopIGZvciB0aGUgYnVmZmVyLgogKiAj
ZGVmaW5lIGEgKHZvaWQgKikgY2FzdC4KICovCiNkZWZpbmUga2VybmVsX3NldHNvY2tvcHQoc29j
aywgbGV2ZWwsIG5hbWUsIHZhbCwgbGVuKSBcCiAgICAgICAga2VybmVsX3NldHNvY2tvcHQoc29j
aywgbGV2ZWwsIG5hbWUsICh2b2lkICopdmFsLCBsZW4pCiNkZWZpbmUga2VybmVsX2dldHNvY2tv
cHQoc29jaywgbGV2ZWwsIG5hbWUsIHZhbCwgbGVuKSBcCiAgICAgICAga2VybmVsX2dldHNvY2tv
cHQoc29jaywgbGV2ZWwsIG5hbWUsICh2b2lkICopdmFsLCBsZW4pCgovKiBOb3RlIHRoYXQgd2Ug
Y2FuJ3QgKGVhc2lseSkgaG9sZCByZWZlcmVuY2UgY291bnRzIG9uIHRoZSBuYW1lc3BhY2UKICog
YmVjYXVzZSBwdXRfbmV0KCkgaXMgR1BMX09OTFkuCiAqIEluc3RlYWQgd2Uga2VlcCBvdXIgb3du
IHRhYmxlIGFuZCBjcmVhdGUgYSBzb2NrZXQgdG8gaG9sZCB0aGUKICogcmVmZXJlbmNlIGZvciB1
cy4KICogVGFibGUgZW50cmllcyAwIGFuZCAxIGFsd2F5cyByZWZlciB0byBpbml0X25ldCBhbmQg
dGhlIG5hbWVzcGFjZQogKiBvZiB0aGUgKGxhc3Qgc3RhcnRlZCkgc3M3IGRhZW1vbi4gTmVpdGhl
ciBpcyByZWZlcmVuY2UgY291bnRlZAogKiAoYWx0aG91Z2ggd2UgaG9sZCBhIHNpbmdsZSByZWZl
cmVuY2Ugb24gdGhlIGxhdHRlcikuCiAqIEhpZ2hlciBlbnRyaWVzIGFyZSBzYXZlZCBmcm9tIGlu
dm9jYXRpb25zIG9mICdzczdtYWludCBzdGFydCcKICogYW5kICdmaXJtd2FyZSBkb3dubG9hZCcu
ICovCgpzdGF0aWMgc3RydWN0IHNzN19uc19pbmZvIHsKICAgIHN0cnVjdCBuZXQgICAgKm5pX25l
dF9uczsKICAgIHN0cnVjdCBzb2NrZXQgKm5pX3NvY2s7CiAgICB1bnNpZ25lZCBpbnQgIG5pX3Jl
ZmNvdW50Owp9IHNzN19uc190YWJsZVsyNTZdOwoKc3RhdGljIHN0cnVjdCBzb2NrZXQgKgpzczdf
Z2x1ZV9jcmVhdGVfbnNfc29ja2V0KHN0cnVjdCBuZXQgKm5ldCkKewogICAgc3RydWN0IHNvY2tl
dCAqc29jazsKCiAgICBpZiAoX19zb2NrX2NyZWF0ZShuZXQsIEFGX0lORVQsIFNPQ0tfREdSQU0s
IElQUFJPVE9fVURQLCAmc29jaywgMCkpCiAgICAgICAgcmV0dXJuIE5VTEw7CiAgICByZXR1cm4g
c29jazsKfQoKdm9pZApzczdfbmV0X25zX2dldCh1bnNpZ25lZCBpbnQgbmFtZXNwYWNlKQp7CiAg
ICB1bnNpZ25lZCBpbnQgaWR4ID0gU1M3X05FVF9OU19JRFgobmFtZXNwYWNlKTsKCiAgICBpZiAo
aWR4IDw9IFNTN19ORVRfTlNfSURYKFNTN19ORVRfTlNfREFFTU9OKSkKICAgICAgICAvKiBTUzdf
TkVUX05TX0lOSVQgYW5kIFNTN19ORVRfTlNfREFFTU9OIGFyZW4ndCByZWYtY291bnRlZCAqLwog
ICAgICAgIHJldHVybjsKCiAgICBzczdfbXV0ZXhfZW50ZXIoJnNzN19nbHVlX211dGV4KTsKICAg
IHNzN19uc190YWJsZVtpZHhdLm5pX3JlZmNvdW50Kys7CiAgICBzczdfbXV0ZXhfZXhpdCgmc3M3
X2dsdWVfbXV0ZXgpOwoKICAgIHNzN190cmFjZV9wcmludGYoMCwgInNzN19uZXRfbnNfZ2V0KCV4
KTogcmVmY291bnQgJWQsIHNvY2sgJXAsIG5ldCAlcFxuIiwKICAgICAgICAgICAgbmFtZXNwYWNl
LCBzczdfbnNfdGFibGVbaWR4XS5uaV9yZWZjb3VudCwgc3M3X25zX3RhYmxlW2lkeF0ubmlfc29j
aywKICAgICAgICAgICAgc3M3X25zX3RhYmxlW2lkeF0ubmlfbmV0X25zKTsKfQoKdm9pZApzczdf
bmV0X25zX3B1dCh1bnNpZ25lZCBpbnQgbmFtZXNwYWNlKQp7CiAgICBzdHJ1Y3Qgc3M3X25zX2lu
Zm8gKm5pOwogICAgdW5zaWduZWQgaW50IGlkeCA9IFNTN19ORVRfTlNfSURYKG5hbWVzcGFjZSk7
CgogICAgaWYgKGlkeCA8PSBTUzdfTkVUX05TX0lEWChTUzdfTkVUX05TX0RBRU1PTikpCiAgICAg
ICAgLyogU1M3X05FVF9OU19JTklUIGFuZCBTUzdfTkVUX05TX0RBRU1PTiBhcmVuJ3QgcmVmLWNv
dW50ZWQgKi8KICAgICAgICByZXR1cm47CiAgICBuaSA9IHNzN19uc190YWJsZSArIGlkeDsKCiAg
ICBzczdfdHJhY2VfcHJpbnRmKDAsICJzczdfbmV0X25zX3B1dCgleCk6IHJlZmNvdW50ICVkLCBz
b2NrICVwLCBuZXQgJXBcbiIsCiAgICAgICAgICAgIG5hbWVzcGFjZSwgbmktPm5pX3JlZmNvdW50
LCBuaS0+bmlfc29jaywgbmktPm5pX25ldF9ucyk7CgogICAgc3M3X211dGV4X2VudGVyKCZzczdf
Z2x1ZV9tdXRleCk7CiAgICBpZiAobmktPm5pX3JlZmNvdW50ICYmICEtLW5pLT5uaV9yZWZjb3Vu
dCkgewogICAgICAgIC8qIExhc3QgcmVmZXJlbmNlIGdvbmUgKi8KICAgICAgICBzb2NrX3JlbGVh
c2UobmktPm5pX3NvY2spOwogICAgICAgIG5pLT5uaV9uZXRfbnMgPSBOVUxMOwogICAgICAgIG5p
LT5uaV9zb2NrID0gTlVMTDsKICAgIH0KICAgIHNzN19tdXRleF9leGl0KCZzczdfZ2x1ZV9tdXRl
eCk7Cn0KCnN0YXRpYyB2b2lkCnNzN19uZXRfbnNfdW5sb2FkKHZvaWQpCnsKICAgIHVuc2lnbmVk
IGludCBpZHg7CiAgICBzdHJ1Y3Qgc3M3X25zX2luZm8gKm5pOwoKICAgIGZvciAoaWR4ID0gMTsg
aWR4IDwgQVJSQVlfU0laRShzczdfbnNfdGFibGUpOyBpZHgrKykgewogICAgICAgIG5pID0gc3M3
X25zX3RhYmxlICsgaWR4OwogICAgICAgIGlmICghbmktPm5pX3NvY2spCiAgICAgICAgICAgIGNv
bnRpbnVlOwoKICAgICAgICAvKiBUaGlzIHNob3VsZCBvbmx5IHJlcG9ydCBhbnl0aGluZyBmb3Ig
dGhlICdkYWVtb24nIHNsb3QgKi8KICAgICAgICBwcmludGsoS0VSTl9JTkZPICJzczdfbmV0X25z
X3VubG9hZCgpOiBpZHggJWQsIHJlZmNvdW50ICVkLCBzb2NrICVwLCBuZXQgJXBcbiIsCiAgICAg
ICAgICAgICAgICBpZHgsIG5pLT5uaV9yZWZjb3VudCwgbmktPm5pX3NvY2ssIG5pLT5uaV9uZXRf
bnMpOwogICAgICAgIHNvY2tfcmVsZWFzZShuaS0+bmlfc29jayk7CiAgICAgICAgbmktPm5pX25l
dF9ucyA9IE5VTEw7CiAgICAgICAgbmktPm5pX3NvY2sgPSBOVUxMOwogICAgICAgIG5pLT5uaV9y
ZWZjb3VudCA9IDA7CiAgICB9Cn0KCnVuc2lnbmVkIGludApzczdfbmV0X25zX3NldCh1bnNpZ25l
ZCBpbnQgbmV3X25hbWVzcGFjZSwgdW5zaWduZWQgaW50IG9sZF9uYW1lc3BhY2UpCnsKICAgIHN0
YXRpYyB1bnNpZ25lZCBpbnQgbnVtX3VzZWRfaWR4ID0gMjsKICAgIHVuc2lnbmVkIGludCBpZHgs
IGZyZWVfaWR4OwogICAgc3RydWN0IHNzN19uc19pbmZvICpuaTsKICAgIHN0cnVjdCBuZXQgKm5l
dDsKCiAgICAvKiBUaGUgbmV3X25hbWVzcGFjZSBzaG91bGQgaGF2ZSB0aGUgbG93IDE2IGJpdHMg
emVyby4KICAgICAqIFRoZSBsb3cgYml0cyBvZiBvbGRfbmFtZXNwYWNlIGluZGljYXRlIHdoYXQg
d2FzIGFjdHVhbGx5IGJlaW5nIHVzZWQuICovCgogICAgaWYgKG5ld19uYW1lc3BhY2UgIT0gU1M3
X05FVF9OU19TVEFSVCkgewogICAgICAgIHNzN19uZXRfbnNfcHV0KG9sZF9uYW1lc3BhY2UpOwog
ICAgICAgIHJldHVybiBuZXdfbmFtZXNwYWNlID09IFNTN19ORVRfTlNfREFFTU9OID8gU1M3X05F
VF9OU19EQUVNT04gOiBTUzdfTkVUX05TX0lOSVQ7CiAgICB9CgogICAgLyogU1M3X05FVF9OU19T
VEFSVCAtIGxvb2sgZm9yIGFuIGVudHJ5IGZvciB0aGUgbmFtZXNwYWNlIG9mIHRoZSBjdXJyZW50
IAogICAgICogcHJvY2VzcyAod2hpY2ggd2lsbCBiZSAnc3M3bWFpbnQgc3RhcnQnKS4gKi8KICAg
IG5ldCA9IGN1cnJlbnQtPm5zcHJveHktPm5ldF9uczsKCiAgICBpZHggPSBTUzdfTkVUX05TX0lE
WChvbGRfbmFtZXNwYWNlKTsKICAgIG5pID0gc3M3X25zX3RhYmxlICsgaWR4OwogICAgaWYgKG5p
LT5uaV9uZXRfbnMgPT0gbmV0KQogICAgICAgIC8qIFVuY2hhbmdlZCBpbmRleCwgbm8gbmVlZCB0
byBjaGFuZ2UgcmVmZXJlbmNlIGNvdW50ICovCiAgICAgICAgcmV0dXJuIFNTN19ORVRfTlNfU1RB
UlQgfCBpZHg7CgogICAgLyogRGlmZmVyZW50IHNsb3QgbmVlZGVkLCBkcm9wIG9sZCByZWZlcmVu
Y2UgKi8KICAgIHNzN19uZXRfbnNfcHV0KG9sZF9uYW1lc3BhY2UpOwoKICAgIC8qIENoZWNrIGlu
aXQgYW5kIGRhZW1vbiBlbnRyaWVzLCBuZWl0aGVyIGdvZXMgYXdheSAqLwogICAgaWYgKGlkeCAh
PSBTUzdfTkVUX05TX0lEWChTUzdfTkVUX05TX0lOSVQpCiAgICAgICAgICAgICYmIG5ldCA9PSAm
aW5pdF9uZXQpCiAgICAgICAgcmV0dXJuIFNTN19ORVRfTlNfU1RBUlQgfCBTUzdfTkVUX05TX0lE
WChTUzdfTkVUX05TX0lOSVQpOwoKICAgIGlkeCA9IFNTN19ORVRfTlNfSURYKFNTN19ORVRfTlNf
REFFTU9OKTsKICAgIG5pID0gc3M3X25zX3RhYmxlICsgaWR4OwogICAgaWYgKG5ldCA9PSBuaS0+
bmlfbmV0X25zKQogICAgICAgIHJldHVybiBTUzdfTkVUX05TX1NUQVJUIHwgaWR4OwoKICAgIHNz
N19tdXRleF9lbnRlcigmc3M3X2dsdWVfbXV0ZXgpOwoKICAgIC8qIFNjYW4gdGFibGUgZm9yIGFu
IGV4aXN0aW5nIHJlZmVyZW5jZSAqLwogICAgZnJlZV9pZHggPSAwOwogICAgZm9yIChpZHggPSAy
OyBpZHggPCBudW1fdXNlZF9pZHg7IGlkeCsrKSB7CiAgICAgICAgbmkgPSBzczdfbnNfdGFibGUg
KyBpZHg7CiAgICAgICAgaWYgKG5pLT5uaV9uZXRfbnMgPT0gbmV0KSB7CiAgICAgICAgICAgIC8q
IGZvdW5kIGEgbWF0Y2ggKi8KICAgICAgICAgICAgbmktPm5pX3JlZmNvdW50Kys7CiAgICAgICAg
ICAgIHNzN19tdXRleF9leGl0KCZzczdfZ2x1ZV9tdXRleCk7CiAgICAgICAgICAgIHNzN190cmFj
ZV9wcmludGYoMCwgInNzN19uZXRfbnNfc2V0KCV4LCAleCk6IGZvdW5kIGlkeCAlZCwgcmVmY291
bnQgJWQsIHNvY2sgJXAsIG5ldCAlcFxuIiwKICAgICAgICAgICAgICAgICAgICBuZXdfbmFtZXNw
YWNlLCBvbGRfbmFtZXNwYWNlLCBpZHgsIG5pLT5uaV9yZWZjb3VudCwgbmktPm5pX3NvY2ssIG5p
LT5uaV9uZXRfbnMpOwogICAgICAgICAgICByZXR1cm4gU1M3X05FVF9OU19TVEFSVCB8IGlkeDsK
ICAgICAgICB9CiAgICAgICAgaWYgKCFmcmVlX2lkeCAmJiAhbmktPm5pX25ldF9ucykKICAgICAg
ICAgICAgZnJlZV9pZHggPSBpZHg7CiAgICB9CgogICAgLyogTm90IGZvdW5kIGFsbG9jYXRlIGxv
d2VzdCBmcmVlIHNsb3QgKi8KICAgIGlmICghZnJlZV9pZHgpIHsKICAgICAgICBpZiAobnVtX3Vz
ZWRfaWR4ID49IEFSUkFZX1NJWkUoc3M3X25zX3RhYmxlKSkKICAgICAgICAgICAgLyogVGFibGUg
ZnVsbCwgYm9ya2VkICovCiAgICAgICAgICAgIGdvdG8gbm9fcmVmOwogICAgICAgIGZyZWVfaWR4
ID0gbnVtX3VzZWRfaWR4Kys7CiAgICB9CgogICAgbmkgPSAmc3M3X25zX3RhYmxlW2ZyZWVfaWR4
XTsKICAgIG5pLT5uaV9zb2NrID0gc3M3X2dsdWVfY3JlYXRlX25zX3NvY2tldChuZXQpOwogICAg
aWYgKCFuaS0+bmlfc29jaykKICAgICAgICBnb3RvIG5vX3JlZjsKICAgIG5pLT5uaV9uZXRfbnMg
PSBuZXQ7CgogICAgc3M3X211dGV4X2V4aXQoJnNzN19nbHVlX211dGV4KTsKICAgIHNzN190cmFj
ZV9wcmludGYoMCwgInNzN19uZXRfbnNfc2V0KCV4LCAleCk6IG5ldyBpZHggJWQsIHNvY2sgJXAs
IG5ldCAlcFxuIiwKICAgICAgICAgICAgbmV3X25hbWVzcGFjZSwgb2xkX25hbWVzcGFjZSwgZnJl
ZV9pZHgsIG5pLT5uaV9zb2NrLCBuaS0+bmlfbmV0X25zKTsKCiAgICByZXR1cm4gU1M3X05FVF9O
U19TVEFSVCB8IGZyZWVfaWR4OwoKICBub19yZWY6CiAgICBzczdfbXV0ZXhfZXhpdCgmc3M3X2ds
dWVfbXV0ZXgpOwogICAgc3M3X3RyYWNlX3ByaW50ZigwLCAic3M3X25ldF9uc19zZXQoJXgsICV4
KTogbm9fcmVmXG4iLAogICAgICAgICAgICBuZXdfbmFtZXNwYWNlLCBvbGRfbmFtZXNwYWNlKTsK
ICAgIHJldHVybiBTUzdfTkVUX05TX1NUQVJUOwp9Cgp2b2lkCnNzN19nbHVlX2RhZW1vbl9vcGVu
KHZvaWQpCnsKICAgIHN0cnVjdCBzczdfbnNfaW5mbyAqbmkgPSAmc3M3X25zX3RhYmxlW1NTN19O
RVRfTlNfSURYKFNTN19ORVRfTlNfREFFTU9OKV07CiAgICBzdHJ1Y3QgbmV0ICpuZXQgPSBjdXJy
ZW50LT5uc3Byb3h5LT5uZXRfbnM7CgogICAgLyogU2F2ZSAoYW5kIHJlZmVyZW5jZSBjb3VudCkg
dGhlIG5ldHdvcmsgbmFtZXNwYWNlIHRoZSBzczcgZGFlbW9uCiAgICAgKiBpcyBzdGFydGVkIGlu
LiAqLwoKICAgIC8qIEluaXRpYWxpc2UgdGhlIGVudHJ5IGZvciBpbml0X25ldCBoZXJlIC0gaGFz
IHRvIGJlIGRvbmUgc29tZXdoZXJlLiAqLwogICAgc3M3X25zX3RhYmxlW1NTN19ORVRfTlNfSURY
KFNTN19ORVRfTlNfSU5JVCldLm5pX25ldF9ucyA9ICZpbml0X25ldDsKCiAgICBpZiAobmV0ID09
IG5pLT5uaV9uZXRfbnMpCiAgICAgICAgLyogVW5jaGFuZ2VkICovCiAgICAgICAgcmV0dXJuOwoK
ICAgIGlmIChuaS0+bmlfc29jaykKICAgICAgICBzb2NrX3JlbGVhc2UobmktPm5pX3NvY2spOwog
ICAgbmktPm5pX3NvY2sgPSBOVUxMOwoKICAgIGlmIChuZXQgIT0gJmluaXRfbmV0ICYmICEoKG5p
LT5uaV9zb2NrID0gc3M3X2dsdWVfY3JlYXRlX25zX3NvY2tldChuZXQpKSkpCiAgICAgICAgLyog
Q2FuJ3QgY3JlYXRlIHNvY2tldCwgZGVmYXVsdCB0byBnbG9iYWwgbmFtZXNwYWNlICovCiAgICAg
ICAgbmV0ID0gJmluaXRfbmV0OwoKICAgIG5pLT5uaV9uZXRfbnMgPSBuZXQ7Cn0KCmludApzczdf
c29ja2V0KGludCBmYW1pbHksIGludCB0eXBlLCBpbnQgcHJvdG9jb2wsIHVuc2lnbmVkIGludCBu
YW1lc3BhY2UsIHN0cnVjdCBzb2NrZXQgKipzb2NrcCkKewogICAgc3RydWN0IHNvY2tldCAqc29j
azsKICAgIHN0cnVjdCBuZXQgKm5ldDsKICAgIHVuc2lnbmVkIGludCBvbmUgPSAxVTsKICAgIGlu
dCBydmFsOwoKICAgIG5ldCA9IHNzN19uc190YWJsZVtTUzdfTkVUX05TX0lEWChuYW1lc3BhY2Up
XS5uaV9uZXRfbnM7CiAgICBpZiAoIW5ldCkKICAgICAgICBuZXQgPSAmaW5pdF9uZXQ7CgogICAg
LyogSWYgd2UgaGF2ZSB0byBhdXRvbG9hZCB0aGUgc2N0cCBtb2R1bGUsIHdlIG1pZ2h0IHJlLWVu
dGVyIGl0CiAgICAgKiBiZWZvcmUgaXQgaGFzIGZpbmlzaGVkIGluaXRpYWxpc2luZyAtIG1pZ2h0
IGdvICdib29tJy4gKi8KICAgIHNzN19tdXRleF9lbnRlcigmc3M3X2dsdWVfbXV0ZXgpOwoKICAg
IC8qIHNvY2tfY3JlYXRlX2tlcm4oKSBjcmVhdGVzIGEgc29ja2V0IHRoYXQgZG9lc24ndCBob2xk
IGEgcmVmZXJlbmNlCiAgICAgKiB0byB0aGUgbmFtZXNwYWNlICh0aGV5IGdldCB1c2VkIGZvciBz
b2NrZXRzIG5lZWRlZCBieSB0aGUgcHJvdG9jb2wKICAgICAqIHN0YWNrIGNvZGUgaXRzZWxmKS4K
ICAgICAqIFdlIG5lZWQgYSBzb2NrZXQgdGhhdCBob2xkcyBhIHJlZmVyZW5jZSB0byB0aGUgbmFt
ZXNwYWNlLCBzbyBjcmVhdGUKICAgICAqIGEgJ3VzZXInIHNvY2tldCBpbiBhIHNwZWNpZmljIG5h
bWVzcGFjZS4KICAgICAqIFRoaXMgYWRkcyBhbiBleHRyYSBzZWN1cml0eSBjaGVjayB3aGljaCB3
ZSBzaG91bGQgcGFzcyBiZWNhdXNlIGFsbCB0aGUKICAgICAqIHNvY2tldHMgYXJlIGNyZWF0ZWQg
Ynkga2VybmVsIHRocmVhZHMuCiAgICAgKi8KICAgIHJ2YWwgPSBfX3NvY2tfY3JlYXRlKG5ldCwg
ZmFtaWx5LCB0eXBlLCBwcm90b2NvbCwgc29ja3AsIDApOwogICAgc3M3X211dGV4X2V4aXQoJnNz
N19nbHVlX211dGV4KTsKICAgIGlmIChydmFsICE9IDApCiAgICAgICAgcmV0dXJuIHJ2YWw7CiAg
ICBzb2NrID0gKnNvY2twOwoKICAgIGtlcm5lbF9zZXRzb2Nrb3B0KHNvY2ssIFNPTF9TT0NLRVQs
IFNPX1JFVVNFQUREUiwgJm9uZSwgc2l6ZW9mIG9uZSk7CgogICAgcmV0dXJuIDA7Cn0KCnZvaWQK
c3M3X3NldHNvY2tvcHRfbm9kZWxheShzdHJ1Y3Qgc29ja2V0ICpzb2NrLCBpbnQgZW5hYmxlZCkK
ewogICAga2VybmVsX3NldHNvY2tvcHQoc29jaywgU0tfUFJPVE9DT0woc29jayksCiAgICAgICAg
ICAgIFNLX1BST1RPQ09MKHNvY2spID09IElQUFJPVE9fVENQID8gVENQX05PREVMQVkgOiBTQ1RQ
X05PREVMQVksCiAgICAgICAgICAgICZlbmFibGVkLCBzaXplb2YgZW5hYmxlZCk7Cn0KCnN0YXRp
YyB2b2lkCnNzN19zY3RwX3NldF9vcHRzKHN0cnVjdCBzb2NrZXQgKnNvY2spCnsKICAgIHN0cnVj
dCBzY3RwX2V2ZW50X3N1YnNjcmliZSBldmVudHM7CiAgICBpbnQgbGVuLCBydmFsOwoKICAgIGlm
IChTS19QUk9UT0NPTChzb2NrKSAhPSBJUFBST1RPX1NDVFApCiAgICAgICAgcmV0dXJuOwoKICAg
IGxlbiA9IHNpemVvZiBldmVudHM7CiAgICBydmFsID0ga2VybmVsX2dldHNvY2tvcHQoc29jaywg
SVBQUk9UT19TQ1RQLCBTQ1RQX0VWRU5UUywgJmV2ZW50cywgJmxlbik7CiAgICBpZiAocnZhbCAh
PSAwKQogICAgICAgIHJldHVybjsKCiAgICAvKiBXZSBuZWVkIHRvIGtub3cgdGhlIHN0cmVhbSBh
bmQgcHBpZCAqLwogICAgZXZlbnRzLnNjdHBfZGF0YV9pb19ldmVudCA9IDE7CiAgICAvKiBFbmFi
bGUgbm90aWZpY2F0aW9ucyB0byBkZXRlY3QgY29ubmVjdGlvbiByZXN0YXJ0ICovCiAgICBldmVu
dHMuc2N0cF9hc3NvY2lhdGlvbl9ldmVudCA9IDE7CiAgICBrZXJuZWxfc2V0c29ja29wdChzb2Nr
LCBJUFBST1RPX1NDVFAsIFNDVFBfRVZFTlRTLCAmZXZlbnRzLCBzaXplb2YgZXZlbnRzKTsKfQoK
dW5zaWduZWQgaW50CnNzN19nZXRfbWF4X3NjdHBfb3N0cmVhbXMoc3RydWN0IHNvY2tldCAqc29j
aykKewogICAgc3RydWN0IHNjdHBfc3RhdHVzIHNzdGF0OwogICAgaW50IGxlbjsKCiAgICBpZiAo
U0tfUFJPVE9DT0woc29jaykgIT0gSVBQUk9UT19TQ1RQKQogICAgICAgIHJldHVybiAwOwoKICAg
IGxlbiA9IHNpemVvZiBzc3RhdDsKICAgIGlmIChrZXJuZWxfZ2V0c29ja29wdChzb2NrLCBJUFBS
T1RPX1NDVFAsIFNDVFBfU1RBVFVTLCAmc3N0YXQsICZsZW4pKQogICAgICAgIHJldHVybiAwOwoK
ICAgIHJldHVybiBzc3RhdC5zc3RhdF9vdXRzdHJtczsKfQoKdm9pZApzczdfc2V0X21heF9zY3Rw
X3N0cmVhbXMoc3RydWN0IHNvY2tldCAqc29jaywgdW5zaWduZWQgaW50IG1heF9zdHJlYW1zKQp7
CiAgICBzdHJ1Y3Qgc2N0cF9pbml0bXNnIHNpbml0OwoKICAgIGlmIChTS19QUk9UT0NPTChzb2Nr
KSAhPSBJUFBST1RPX1NDVFApCiAgICAgICAgcmV0dXJuOwoKICAgIG1lbXNldCgmc2luaXQsIDAs
IHNpemVvZiBzaW5pdCk7CgogICAgc2luaXQuc2luaXRfbnVtX29zdHJlYW1zID0gbWF4X3N0cmVh
bXM7CiAgICBzaW5pdC5zaW5pdF9tYXhfaW5zdHJlYW1zID0gbWF4X3N0cmVhbXM7CiAgICBrZXJu
ZWxfc2V0c29ja29wdChzb2NrLCBJUFBST1RPX1NDVFAsIFNDVFBfSU5JVE1TRywgJnNpbml0LCBz
aXplb2Ygc2luaXQpOwp9Cgp2b2lkCnNzN190cmFuc19zZXRzb2Nrb3B0KHN0cnVjdCBzb2NrZXQg
KnNvY2spCnsKICAgIHVuc2lnbmVkIGludCBvbmUgPSAxVTsKCiAgICBzczdfc2V0c29ja29wdF9u
b2RlbGF5KHNvY2ssIDEpOwogICAgc3M3X3NjdHBfc2V0X29wdHMoc29jayk7CiAgICBpZiAoU0tf
UFJPVE9DT0woc29jaykgPT0gSVBQUk9UT19UQ1ApCiAgICAgICAga2VybmVsX3NldHNvY2tvcHQo
c29jaywgU09MX1NPQ0tFVCwgU09fS0VFUEFMSVZFLCAmb25lLCBzaXplb2Ygb25lKTsKfQoKdm9p
ZApzczdfdHJhbnNiaW5kX3NldHNvY2tvcHQoc3RydWN0IHNvY2tldCAqc29jaykKewogICAgLyog
U2V0IG9wdGlvbnMgZm9yIGEgbGlzdGVuaW5nIHNvY2tldCAqLwogICAgc3M3X3NjdHBfc2V0X29w
dHMoc29jayk7CgogICAgLyogTTNVQSBtYXkgbmVlZCAxNiBkYXRhIHN0cmVhbXMsIGl0IGlzIGp1
c3QgVEZIIHRvIGNvbmZpZ3VyZSB0aGlzICovCiAgICBzczdfc2V0X21heF9zY3RwX3N0cmVhbXMo
c29jaywgMSArIDE2KTsKfQoKI2RlZmluZSBJUF9BRERSX0xFTihzYSkgKChzYSktPnNpbjZfZmFt
aWx5ID09IEFGX0lORVQ2ID8gc2l6ZW9mICooc2EpIDogMTYpCmludApzczdfY29ubmVjdChzdHJ1
Y3Qgc29ja2V0ICpzb2NrLCBzdHJ1Y3Qgc29ja2FkZHJfaW42ICpzYSkKewogICAgcmV0dXJuIGtl
cm5lbF9jb25uZWN0KHNvY2ssICh2b2lkICopc2EsIElQX0FERFJfTEVOKHNhKSwgT19SRFdSKTsK
fQoKaW50CnNzN19iaW5kKHN0cnVjdCBzb2NrZXQgKnNvY2ssIHN0cnVjdCBzb2NrYWRkcl9pbjYg
KnNhLCB1bnNpZ25lZCBpbnQgYWZfb3B0cykKewogICAgLyogSWYgd2UgYXJlIGJpbmRpbmcgSU5B
RERSNl9BTlkgdG8gYW4gSVB2NiBzb2NrZXQgKHR5cGljYWxseSBmb3IKICAgICAqIGEgbGlzdGVu
aW5nIHNvY2tldCkgdGhlbiB3ZSBwcm9iYWJseSB3YW50IHRvIGVuc3VyZSB0aGF0IElQVjZfVjZP
TkxZCiAgICAgKiBpcyAwIHNvIHRoYXQgdGhlIHNvY2tldCB3aWxsIGFsc28gYmUgZ2l2ZW4gSVB2
NCBjb25uZWN0aW9ucy4gKi8KICAgIGlmIChzYS0+c2luNl9mYW1pbHkgPT0gQUZfSU5FVDYgJiYg
YWZfb3B0cyAmIFNTN19BRl9PUFRfSVB2Nl9WNk9OTFkKICAgICAgICAgICAgJiYgc2EtPnNpbjZf
YWRkci5pbjZfdS51Nl9hZGRyMzJbMF0gPT0gMAogICAgICAgICAgICAmJiAoc2EtPnNpbjZfYWRk
ci5pbjZfdS51Nl9hZGRyMzJbMV0KICAgICAgICAgICAgICAgIHwgc2EtPnNpbjZfYWRkci5pbjZf
dS51Nl9hZGRyMzJbMl0KICAgICAgICAgICAgICAgIHwgc2EtPnNpbjZfYWRkci5pbjZfdS51Nl9h
ZGRyMzJbM10pID09IDApIHsKICAgICAgICBpbnQgdjZvbmx5ID0gYWZfb3B0cyAmIDE7CiAgICAg
ICAga2VybmVsX3NldHNvY2tvcHQoc29jaywgSVBQUk9UT19JUFY2LCBJUFY2X1Y2T05MWSwgJnY2
b25seSwgc2l6ZW9mIHY2b25seSk7CiAgICB9CgogICAgcmV0dXJuIGtlcm5lbF9iaW5kKHNvY2ss
ICh2b2lkICopc2EsIElQX0FERFJfTEVOKHNhKSk7Cn0KCmludApzczdfYmluZHgoc3RydWN0IHNv
Y2tldCAqc29jaywgc3RydWN0IHNvY2thZGRyX2luNiAqc2EpCnsKICAgIGlmIChTS19QUk9UT0NP
TChzb2NrKSAhPSBJUFBST1RPX1NDVFApCiAgICAgICAgcmV0dXJuIC1FUFJPVE9OT1NVUFBPUlQ7
CgogICAgcmV0dXJuIGtlcm5lbF9zZXRzb2Nrb3B0KHNvY2ssIElQUFJPVE9fU0NUUCwgU0NUUF9T
T0NLT1BUX0JJTkRYX0FERCwKICAgICAgICAgICAgc2EsIElQX0FERFJfTEVOKHNhKSk7Cn0KCmlu
dApzczdfbGlzdGVuKHN0cnVjdCBzb2NrZXQgKnNvY2ssIGludCBsZW4pCnsKICAgIHJldHVybiBr
ZXJuZWxfbGlzdGVuKHNvY2ssIGxlbik7Cn0KCmludApzczdfYWNjZXB0KHN0cnVjdCBzb2NrZXQg
KnNvY2ssIHN0cnVjdCBzb2NrZXQgKipuZXdfc29ja3AsIGludCBmbGFncykKewogICAgcmV0dXJu
IGtlcm5lbF9hY2NlcHQoc29jaywgbmV3X3NvY2twLCBmbGFncyk7Cn0KCiNpZiBMSU5VWF9WRVJT
SU9OX0NPREUgPCBLRVJORUxfVkVSU0lPTig0LCAxNywgMCkKc3RhdGljIGlubGluZSBpbnQKc3M3
X2tlcm5lbF9nZXRzb2NrbmFtZShzdHJ1Y3Qgc29ja2V0ICpzb2NrLCBzdHJ1Y3Qgc29ja2FkZHIg
KmFkZHJlc3MpCnsKICAgIGludCBlcnIsIGxlbjsKCiAgICBlcnIgPSBrZXJuZWxfZ2V0c29ja25h
bWUoc29jaywgKHN0cnVjdCBzb2NrYWRkciAqKWFkZHJlc3MsICZsZW4pOwogICAgcmV0dXJuIGVy
ciA/IGVyciA6IGxlbjsKfQojZGVmaW5lIGtlcm5lbF9nZXRzb2NrbmFtZSBzczdfa2VybmVsX2dl
dHNvY2tuYW1lCgpzdGF0aWMgaW5saW5lIGludApzczdfa2VybmVsX2dldHBlZXJuYW1lKHN0cnVj
dCBzb2NrZXQgKnNvY2ssIHN0cnVjdCBzb2NrYWRkciAqYWRkcmVzcykKewogICAgaW50IGVyciwg
bGVuOwoKICAgIGVyciA9IGtlcm5lbF9nZXRwZWVybmFtZShzb2NrLCAoc3RydWN0IHNvY2thZGRy
ICopYWRkcmVzcywgJmxlbik7CiAgICByZXR1cm4gZXJyID8gZXJyIDogbGVuOwp9CiNkZWZpbmUg
a2VybmVsX2dldHBlZXJuYW1lIHNzN19rZXJuZWxfZ2V0cGVlcm5hbWUKI2VuZGlmCgppbnQKc3M3
X2dldF9sb2NfcG9ydChzdHJ1Y3Qgc29ja2V0ICpzb2NrKQp7CiAgICBjaGFyIGFkZHJlc3NbMTI4
IC8qTUFYX1NPQ0tfQUREUiovXTsKICAgIGludCBsZW47CgogICAgbGVuID0ga2VybmVsX2dldHNv
Y2tuYW1lKHNvY2ssIChzdHJ1Y3Qgc29ja2FkZHIgKilhZGRyZXNzKTsKICAgIGlmIChsZW4gPCAw
KQogICAgICAgIHJldHVybiAwOwoKICAgIC8qIFRoaXMgd29ya3Mgd2VsbCBlbm91Z2ggZm9yIElQ
djQgYW5kIElQdjYgKi8KICAgIHJldHVybiBudG9ocygoKHN0cnVjdCBzb2NrYWRkcl9pbiAqKWFk
ZHJlc3MpLT5zaW5fcG9ydCk7Cn0KCmludApzczdfZ2V0X3JlbV9hZGRyKHN0cnVjdCBzb2NrZXQg
KnNvY2ssIHN0cnVjdCBzb2NrYWRkcl9pbjYgKnNhZGRyKQp7CiAgICBpbnQgbGVuOwoKICAgIGxl
biA9IGtlcm5lbF9nZXRwZWVybmFtZShzb2NrLCAoc3RydWN0IHNvY2thZGRyICopc2FkZHIpOwog
ICAgaWYgKGxlbiA8IDApCiAgICAgICAgcmV0dXJuIGxlbjsKCiAgICBpZiAobGVuID4gc2l6ZW9m
ICpzYWRkcikKICAgICAgICBwcmludGsoS0VSTl9FTUVSRyAic3M3c2VydmVyOiBzb2NrZXQgYWRk
cmVzcyAoZmFtaWx5ICVkKSAlZCA+ICVkIiwKICAgICAgICAgICAgICAgIHNhZGRyLT5zaW42X2Zh
bWlseSwgbGVuLCAoaW50KXNpemVvZiAqc2FkZHIpOwoKICAgIHJldHVybiAwOwp9CgppbnQKc3M3
X3NodXRkb3duKHN0cnVjdCBzb2NrZXQgKnNvY2ssIGludCBob3cpCnsKI2lmIExJTlVYX1ZFUlNJ
T05fQ09ERSA8IEtFUk5FTF9WRVJTSU9OKDMsIDE4LCAwKQogICAgaWYgKFNLX1BST1RPQ09MKHNv
Y2spID09IElQUFJPVE9fU0NUUCkgewogICAgICAgIHN0cnVjdCBsaW5nZXIgbGluZ2VyOwoKICAg
ICAgICAvKiBJZiB3ZSBjYWxsIGtlcm5lbF9zb2NrX3NodXRkb3duKCkgdGhlbiB0aGUgY29ubmVj
dGlvbiBpc24ndCByZWxlYXNlZAogICAgICAgICAqIHVudGlsIGFsbCBvdXRzdGFuZGluZyBkYXRh
IGhhcyBiZWVuIGFja2VkLgogICAgICAgICAqIElmIHRoZSByZW1vdGUgc3lzdGVtIHNlbmRzIGFu
IElOSVQgKHJlc3RhcnRpbmcgdGhlIGNvbm5lY3Rpb24pCiAgICAgICAgICogd2hpbGUgdGhlIGxp
bnV4IGtlcm5lbCBpcyB3YWl0aW5nIGZvciBkYXRhIHRvIGJlIGFja2VkIHRoZW4gaXQKICAgICAg
ICAgKiB3aWxsIG5ldmVyIGRpc2Nvbm5lY3QuCiAgICAgICAgICogRW5hYmxpbmcgJ2xpbmdlcicg
d2l0aCBhIGRlbGF5IG9mIHplcm8gY2F1c2VzIHNvY2tfcmVsZWFzZSgpCiAgICAgICAgICogdG8g
YWJvcnQgdGhlIGNvbm5lY3Rpb24gKHNlbmRzIGFuIEFCT1JUIGNodW5rKS4KICAgICAgICAgKgog
ICAgICAgICAqIFRoZSBzczcgY29kZSBuZXZlciBuZWVkcyB0byB3YWl0IGZvciBzZW50IGRhdGEg
dG8gYmUgYWNrZWQsCiAgICAgICAgICogc28gYWJvcnRpbmcgdGhlIGNvbm5lY3Rpb24gZG9lc24n
dCByZWFsbHkgbWF0dGVyLgogICAgICAgICAqIEFsbCBjYWxscyB0byBzczdfc2h1dGRvd24oKSBh
cmUgaW1tZWRpYXRlbHkgZm9sbG93ZWQgYnkgY2FsbHMgdG8KICAgICAgICAgKiBzczdfY2xvc2Vz
b2NrZXQoKS4KICAgICAgICAgKgogICAgICAgICAqIFBsYXVzaWJseSB3ZSBzaG91bGQgYWx3YXlz
IGFib3J0IGNvbm5lY3Rpb25zIGlmIHdlIGFyZSBkaXNjb25uZWN0aW5nCiAgICAgICAgICogZHVl
IHRvIGFuIGFwcGxpY2F0aW9uIGxldmVsIHRpbWVvdXQuCiAgICAgICAgICoKICAgICAgICAgKiBG
aXhlZCBieSB0aGUga2VybmVsIHBhdGNoOgogICAgICAgICAqICAgICJzY3RwOiBoYW5kbGUgYXNz
b2NpYXRpb24gcmVzdGFydHMgd2hlbiB0aGUgc29ja2V0IGlzIGNsb3NlZCIKICAgICAgICAgKiBL
bm93biB0byBiZSBpbmNsdWRlZCBpbiB0aGUgZm9sbG93aW5nIGtlcm5lbHM6CiAgICAgICAgICog
IC0gbWFpbmxpbmUgMy4xOAogICAgICAgICAqICAtIFVidW50dSAzLjEzLjExLjExCiAgICAgICAg
ICogUXVldWVkIGZvciAzLjEwLXN0YWJsZSwgMy4xNC1zdGFibGUsIDMuMTYtc3RhYmxlIGFuZCAz
LjE3LXN0YWJsZQogICAgICAgICAqLwoKICAgICAgICBsaW5nZXIubF9vbm9mZiA9IDE7CiAgICAg
ICAgbGluZ2VyLmxfbGluZ2VyID0gMDsKICAgICAgICBrZXJuZWxfc2V0c29ja29wdChzb2NrLCBT
T0xfU09DS0VULCBTT19MSU5HRVIsICZsaW5nZXIsIHNpemVvZiBsaW5nZXIpOwoKICAgICAgICBy
ZXR1cm4gMDsKICAgIH0KI2VuZGlmCiAgICByZXR1cm4ga2VybmVsX3NvY2tfc2h1dGRvd24oc29j
aywgaG93KTsKfQoKdm9pZApzczdfY2xvc2Vzb2NrZXQoc3RydWN0IHNvY2tldCAqc29jaykKewog
ICAgc29ja19yZWxlYXNlKHNvY2spOwp9CgppbnQKc3M3X3NlbmQoc3RydWN0IHNvY2tldCAqc29j
aywgc3RydWN0IHNzN19pb3ZlYyAqaW92LCBpbnQgaW92bGVuLCBpbnQgdG90bGVuLAogICAgICAg
IHZvaWQgKmN0bCwgaW50IGN0bF9sZW4sIHVuc2lnbmVkIGludCBmbGFncykKewogICAgc3RydWN0
IG1zZ2hkciBtc2c7CgogICAgbXNnLm1zZ19uYW1lICAgICAgID0gMDsKICAgIG1zZy5tc2dfbmFt
ZWxlbiAgICA9IDA7CiAgICBtc2cubXNnX2NvbnRyb2wgICAgPSBjdGw7CiAgICBtc2cubXNnX2Nv
bnRyb2xsZW4gPSBjdGxfbGVuOwogICAgbXNnLm1zZ19mbGFncyAgICAgID0gZmxhZ3MgfCBNU0df
Tk9TSUdOQUw7CgogICAgcmV0dXJuIGtlcm5lbF9zZW5kbXNnKHNvY2ssICZtc2csIGlvdiwgaW92
bGVuLCB0b3RsZW4pOwp9CgppbnQKc3M3X3JlY3Yoc3RydWN0IHNvY2tldCAqc29jaywgdW5zaWdu
ZWQgY2hhciAqZGF0YSwgaW50IGxlbmd0aCwgaW50IGZsYWdzKQp7CiAgICBzdHJ1Y3Qga3ZlYyBp
b3Y7CiAgICBzdHJ1Y3QgbXNnaGRyIG1zZzsKCiAgICBpZiAoIXNvY2stPnNrKQogICAgICAgIHJl
dHVybiAwOwoKICAgIGlvdi5pb3ZfbGVuICAgICAgICA9IGxlbmd0aDsKICAgIGlvdi5pb3ZfYmFz
ZSAgICAgICA9IGRhdGE7CgogICAgbXNnLm1zZ19uYW1lICAgICAgID0gMDsKICAgIG1zZy5tc2df
bmFtZWxlbiAgICA9IDA7CiAgICBtc2cubXNnX2NvbnRyb2wgICAgPSBOVUxMOwogICAgbXNnLm1z
Z19jb250cm9sbGVuID0gMDsKICAgIG1zZy5tc2dfZmxhZ3MgICAgICA9IDA7CgogICAgcmV0dXJu
IGtlcm5lbF9yZWN2bXNnKHNvY2ssICZtc2csICZpb3YsIDEsIGxlbmd0aCwgMCk7Cn0KCmludApz
czdfcmVjdl9zY3RwKHN0cnVjdCBzb2NrZXQgKnNvY2ssIHZvaWQgKmJ1Zl8xLCBpbnQgbGVuXzEs
IHZvaWQgKmJ1Zl8yLAogICAgaW50IGxlbl8yLCBzdHJ1Y3Qgc3M3X21zZ2IgKnNzN19tc2cpCnsK
ICAgIHN0cnVjdCBtc2doZHIgbXNnOwogICAgc3RydWN0IGt2ZWMgaW92WzJdOwogICAgdW5zaWdu
ZWQgY2hhciAqZGF0YSA9IGJ1Zl8xOwogICAgaW50IG1zZ19sZW4sIGN0bF9sZW47CiAgICBpbnQg
cnZhbDsKICAgIHVuaW9uIHsKICAgICAgICBzdHJ1Y3QgY21zZ2hkciBjbXNnOwogICAgICAgIHVu
c2lnbmVkIGludCBidWZbMTZdOwogICAgfSBjdGxidWY7CgogICAgaWYgKCFzb2NrLT5zaykKICAg
ICAgICByZXR1cm4gMDsKCiAgICAvKiBGb3IgU0NUUCBlYWNoIHJlY3Ztc2cgc2hvdWxkIGdpdmUg
dXMgYSBzaW5nbGUgZGF0YSByZWNvcmQuCiAgICAgKiBTaW5jZSB3ZSBvbmx5IGV2ZXIgc2VuZCBT
SUdUUkFOIGVuY29kZWQgbWVzc2FnZXMgYnl0ZXMgNC03IGFyZSB0aGUKICAgICAqIGxlbmd0aCAt
IGFuZCBzaG91bGQgbWF0Y2ggdGhhdCBvZiB0aGUgc2N0cCBkYXRhIGNodW5rLgogICAgICogYnVm
XzEvbGVuXzEgcmVmZXIgdG8gdGhlIG5vcm1hbCBzczcgbWVzc2FnZSBidWZmZXIgYXJlYSwgYnVm
XzIvbGVuXzIKICAgICAqIGFyZSBwZXItc29ja2V0LiBMb25nIG1lc3NhZ2VzIGdldCBjb3BpZWQg
dG9nZXRoZXIgYnkgdGhlIGNhbGxlci4KICAgICAqIFRoZSByZXN1bHQgaXMgYWx3YXlzIGEgc2lu
Z2xlIHZhbGlkIFNJR1RSQU4gbWVzc2FnZSAqLwoKICAgIGlvdlswXS5pb3ZfYmFzZSAgICA9IGJ1
Zl8xOwogICAgaW92WzBdLmlvdl9sZW4gICAgID0gbGVuXzE7CiAgICBpb3ZbMV0uaW92X2Jhc2Ug
ICAgPSBidWZfMjsKICAgIGlvdlsxXS5pb3ZfbGVuICAgICA9IGxlbl8yOwoKICAgIG1zZy5tc2df
bmFtZSAgICAgICA9IDA7CiAgICBtc2cubXNnX25hbWVsZW4gICAgPSAwOwogICAgbXNnLm1zZ19j
b250cm9sICAgID0gJmN0bGJ1ZjsKICAgIG1zZy5tc2dfY29udHJvbGxlbiA9IHNpemVvZiBjdGxi
dWY7CiAgICBtc2cubXNnX2ZsYWdzICAgICAgPSAwOwoKICAgIHJ2YWwgPSBrZXJuZWxfcmVjdm1z
Zyhzb2NrLCAmbXNnLCBpb3YsIDIsIGxlbl8xICsgbGVuXzIsIDApOwoKICAgIGlmIChydmFsIDw9
IDApCiAgICAgICAgLyogRG9uJ3QgcmV0dXJuIEVCQURNU0cgaGVyZSAqLwogICAgICAgIHJldHVy
biBydmFsICE9IC1FQkFETVNHID8gcnZhbCA6IC1FSU87CgogICAgaWYgKG1zZy5tc2dfZmxhZ3Mg
JiBNU0dfTk9USUZJQ0FUSU9OKQogICAgICAgIC8qIG1zZyBkYXRhIGlzIGEgbm90aWZpY2F0aW9u
ICovCiAgICAgICAgcmV0dXJuIC1FQkFETVNHOwoKICAgIGN0bF9sZW4gPSAoY2hhciAqKW1zZy5t
c2dfY29udHJvbCAtIChjaGFyICopJmN0bGJ1ZjsKICAgIGlmIChjdGxfbGVuID49IGN0bGJ1Zi5j
bXNnLmNtc2dfbGVuCiAgICAgICAgICAgICYmIGN0bGJ1Zi5jbXNnLmNtc2dfbGV2ZWwgPT0gSVBQ
Uk9UT19TQ1RQCiAgICAgICAgICAgICYmIGN0bGJ1Zi5jbXNnLmNtc2dfdHlwZSA9PSBTQ1RQX1NO
RFJDVikgewogICAgICAgIHN0cnVjdCBzY3RwX3NuZHJjdmluZm8gKnNpbmZvID0gQ01TR19EQVRB
KCZjdGxidWYuY21zZyk7CiAgICAgICAgc3M3X3RyYW5zX3NldF9tc2dfaW5mbyhzczdfbXNnLCBz
aW5mby0+c2luZm9fc3RyZWFtLCBzaW5mby0+c2luZm9fcHBpZCk7CiAgICB9CgogICAgbXNnX2xl
biA9IGRhdGFbNF0gPDwgMjQgfCBkYXRhWzVdIDw8IDE2IHwgZGF0YVs2XSA8PCA4IHwgZGF0YVs3
XTsKICAgIGlmIChtc2dfbGVuID49IDY1NTU2KQogICAgICAgIC8qIERpc2JlbGlldmUgdGhpcyBp
cyB2YWxpZCBkYXRhICovCiAgICAgICAgcmV0dXJuIC1FSU87CgogICAgaWYgKHJ2YWwgIT0gbXNn
X2xlbiB8fCAhKG1zZy5tc2dfZmxhZ3MgJiBNU0dfRU9SKSkKICAgICAgICByZXR1cm4gLUVJTzsK
ICAgIHJldHVybiBydmFsOwp9CgppbnQKc3M3X3RyYW5zX2luaXRfc2N0cF9zaW5mbyh2b2lkICpi
dWYsIGludCBtYXhsZW4sIF9fdTE2ICoqc3RyZWFtLCBfX3UzMiAqKnBwaWQpCnsKICAgIHN0cnVj
dCBjbXNnaGRyICpjbXNnOwogICAgc3RydWN0IHNjdHBfc25kcmN2aW5mbyAqc2luZm87CgogICAg
aWYgKG1heGxlbiA8IENNU0dfTEVOKHNpemVvZiAqc2luZm8pKQogICAgICAgIHJldHVybiAtMTsK
CiAgICBjbXNnID0gYnVmOwogICAgY21zZy0+Y21zZ19sZXZlbCA9IElQUFJPVE9fU0NUUDsKICAg
IGNtc2ctPmNtc2dfdHlwZSA9IFNDVFBfU05EUkNWOwogICAgY21zZy0+Y21zZ19sZW4gPSBDTVNH
X0xFTihzaXplb2YgKnNpbmZvKTsKICAgIHNpbmZvID0gQ01TR19EQVRBKGNtc2cpOwogICAgbWVt
c2V0KHNpbmZvLCAwLCBzaXplb2YgKnNpbmZvKTsKICAgICpzdHJlYW0gPSAmc2luZm8tPnNpbmZv
X3N0cmVhbTsKICAgICpwcGlkID0gJnNpbmZvLT5zaW5mb19wcGlkOwoKICAgIHJldHVybiBDTVNH
X0xFTihzaXplb2YgKnNpbmZvKTsKfQo=
--_002_49f712b3b6704c3096d3834a5985a4d6AcuMSaculabcom_--

