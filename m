Return-Path: <netdev-owner@vger.kernel.org>
X-Original-To: lists+netdev@lfdr.de
Delivered-To: lists+netdev@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [209.132.180.67])
	by mail.lfdr.de (Postfix) with ESMTP id A8FFC11EF72
	for <lists+netdev@lfdr.de>; Sat, 14 Dec 2019 02:07:50 +0100 (CET)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726735AbfLNBHs (ORCPT <rfc822;lists+netdev@lfdr.de>);
        Fri, 13 Dec 2019 20:07:48 -0500
Received: from mail-qv1-f67.google.com ([209.85.219.67]:40240 "EHLO
        mail-qv1-f67.google.com" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725818AbfLNBHr (ORCPT
        <rfc822;netdev@vger.kernel.org>); Fri, 13 Dec 2019 20:07:47 -0500
Received: by mail-qv1-f67.google.com with SMTP id k10so494225qve.7;
        Fri, 13 Dec 2019 17:07:47 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=pVFcEaE8mlWpYttIp5LqudjHVeoCAVsEWOwucctE+C8=;
        b=LBUHuSJUBVN5wrft9ESf8P6+AhzW7GHPpIRGT1w6u+9+Xra+sditT+65VR2xo6oURo
         V2JFths4prNymZo0xot8CdZ2JB9SnniS8j42WQ+ak0wYWF7hEdIDWjkP5bHj3+vJmclF
         k4tn2Y06iUk+ZR+uS7KVfqxmLJKvc9EFMAlM3zBVWKgUU9p4yP+RVc20HiaU3h5XCu/q
         9pr74YR6lubzbWZubd+1VudO7Vv2CH+wJnaYlzr6TpLvdDSTQBPlFsSX3Lg7mu0hsrW1
         +s2Wkm8ecrTTJrena4JNQigbWxNiPYn5GzScuVrqth1FKyudRYKeHh+vZpdXo/+G1+md
         mjsw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=pVFcEaE8mlWpYttIp5LqudjHVeoCAVsEWOwucctE+C8=;
        b=MhXcyWz6rhyhnn+gnePoPW1u4qZWQiIxseDksbSVh43daQo95BnJ9mUm9rbQADj7Kv
         N+g+DDJNj5naNmEt3tZ///Pd0ktR9b1u4sGFxuuBYiB3vsbKyFuKWRArwaSkLXOazehA
         I9x1YSDsVpjnLHgw19+O4IZW+ShwpoKUEk19KOjs4Q9xffneJy2wkxJGtHIbndRcFCtj
         UMxVCk2WZw3C5uLqhYEFk4jLyUT1VMIc1cPfUU1kwVJFDR6RI+YJrsl4d9Efo0wAa0Vg
         HPrTwcXwbzUYk/cB5psjZC+b02eFiZubXA3AyHOBeNOXIbwGugM5Y05ofhKjmm+fH48M
         ZXwQ==
X-Gm-Message-State: APjAAAWy1ks7pBeo4+o5qcExyadLo33V8CCYKjhA7YYBFOupkZGRmCr5
        TCz5ZB7HZoBlCMr966c4QHjXL6pj8s8H22t1XJ8=
X-Google-Smtp-Source: APXvYqyupNME+C1Xikr7a+ScKNVIWMXsnEII9lViXnHkCWA2fXSRyZPWe4ao9Rr4xew04WJKIdeoEdlDQzbY5SvEnwg=
X-Received: by 2002:ad4:4e34:: with SMTP id dm20mr16711664qvb.163.1576285666756;
 Fri, 13 Dec 2019 17:07:46 -0800 (PST)
MIME-Version: 1.0
References: <20191213223214.2791885-1-andriin@fb.com> <20191213223214.2791885-13-andriin@fb.com>
 <20191213235937.naddjeklvds7akz7@ast-mbp.dhcp.thefacebook.com>
In-Reply-To: <20191213235937.naddjeklvds7akz7@ast-mbp.dhcp.thefacebook.com>
From:   Andrii Nakryiko <andrii.nakryiko@gmail.com>
Date:   Fri, 13 Dec 2019 17:07:35 -0800
Message-ID: <CAEf4BzboMHcjv8Jz4A16RvJDPp-1+zs+VtdoAM6tqXChM8igQQ@mail.gmail.com>
Subject: Re: [PATCH v3 bpf-next 12/17] libbpf: add BPF object skeleton support
To:     Alexei Starovoitov <alexei.starovoitov@gmail.com>
Cc:     Andrii Nakryiko <andriin@fb.com>, bpf <bpf@vger.kernel.org>,
        Networking <netdev@vger.kernel.org>,
        Alexei Starovoitov <ast@fb.com>,
        Daniel Borkmann <daniel@iogearbox.net>,
        Kernel Team <kernel-team@fb.com>
Content-Type: text/plain; charset="UTF-8"
Sender: netdev-owner@vger.kernel.org
Precedence: bulk
List-ID: <netdev.vger.kernel.org>
X-Mailing-List: netdev@vger.kernel.org

On Fri, Dec 13, 2019 at 3:59 PM Alexei Starovoitov
<alexei.starovoitov@gmail.com> wrote:
>
> On Fri, Dec 13, 2019 at 02:32:09PM -0800, Andrii Nakryiko wrote:
> > Add new set of APIs, allowing to open/load/attach BPF object through BPF
> > object skeleton, generated by bpftool for a specific BPF object file. All the
> > xxx_skeleton() APIs wrap up corresponding bpf_object_xxx() APIs, but
> > additionally also automate map/program lookups by name, global data
> > initialization and mmap()-ing, etc.  All this greatly improves and simplifies
> > userspace usability of working with BPF programs. See follow up patches for
> > examples.
> >
> > Acked-by: Martin KaFai Lau <kafai@fb.com>
> > Signed-off-by: Andrii Nakryiko <andriin@fb.com>
> ...
> > +int bpf_object__open_skeleton(struct bpf_object_skeleton *s,
> > +                           const struct bpf_object_open_opts *opts);
> > +int bpf_object__load_skeleton(struct bpf_object_skeleton *s);
> > +int bpf_object__attach_skeleton(struct bpf_object_skeleton *s);
> > +void bpf_object__detach_skeleton(struct bpf_object_skeleton *s);
> > +void bpf_object__destroy_skeleton(struct bpf_object_skeleton *s);
>
> libbpf.map and LIBBPF_API update for them is missing ?
> The intent was to expose them as stable libbpf api, right?
>

Yeah, my bad, forgot to add LIBBPF_API.
